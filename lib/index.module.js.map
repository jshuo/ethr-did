{"version":3,"file":"index.module.js","sources":["../src/index.ts"],"sourcesContent":["import { createJWT,  ES256HSMSigner,ES256KSigner, hexToBytes, JWTVerified, Signer as JWTSigner, verifyJWT,  toEthereumAddress } from 'did-jwt'\nimport { Signer as TxSigner } from '@ethersproject/abstract-signer'\nimport { CallOverrides } from '@ethersproject/contracts'\nimport { computeAddress } from '@ethersproject/transactions'\nimport { computePublicKey } from '@ethersproject/signing-key'\nimport { Provider } from '@ethersproject/providers'\nimport { Wallet } from '@ethersproject/wallet'\nimport * as base64 from '@ethersproject/base64'\nimport { hexlify, hexValue, isBytes } from '@ethersproject/bytes'\nimport { Base58 } from '@ethersproject/basex'\nimport { toUtf8Bytes } from '@ethersproject/strings'\nimport { EthrDidController, interpretIdentifier, MetaSignature, REGISTRY } from 'ethr-did-resolver'\nimport { Resolvable } from 'did-resolver'\n\nexport enum DelegateTypes {\n  veriKey = 'veriKey',\n  sigAuth = 'sigAuth',\n  enc = 'enc',\n}\n\ninterface IConfig {\n  identifier: string\n  chainNameOrId?: string | number\n\n  registry?: string\n\n  signer?: JWTSigner\n  alg?: 'ES256K' | 'ES256K-R'\n  txSigner?: TxSigner\n  privateKey?: string\n\n  rpcUrl?: string\n  provider?: Provider\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  web3?: any\n}\n\nexport type KeyPair = {\n  address: string\n  privateKey: string\n  publicKey: string\n  identifier: string\n}\n\ntype DelegateOptions = {\n  delegateType?: DelegateTypes\n  expiresIn?: number\n}\n\nexport class EthrDID {\n  public did: string\n  public address: string\n  public signer?: JWTSigner\n  public alg?: 'ES256K' | 'ES256K-R'\n  private owner?: string\n  private controller?: EthrDidController\n\n  constructor(conf: IConfig) {\n    const { address, publicKey, network } = interpretIdentifier(conf.identifier)\n    const chainNameOrId = typeof conf.chainNameOrId === 'number' ? hexValue(conf.chainNameOrId) : conf.chainNameOrId\n    if (conf.provider || conf.rpcUrl || conf.web3) {\n      let txSigner = conf.txSigner\n      if (conf.privateKey && typeof txSigner === 'undefined') {\n        txSigner = new Wallet(conf.privateKey)\n      }\n      this.controller = new EthrDidController(\n        conf.identifier,\n        undefined,\n        txSigner,\n        chainNameOrId,\n        conf.provider || conf.web3?.currentProvider,\n        conf.rpcUrl,\n        conf.registry || REGISTRY\n      )\n      this.did = this.controller.did\n    } else {\n      const net = network || chainNameOrId\n      let networkString = net ? `${net}:` : ''\n      if (networkString in ['mainnet:', '0x1:']) {\n        networkString = ''\n      }\n      this.did =\n        typeof publicKey === 'string' ? `did:ethr:${networkString}${publicKey}` : `did:ethr:${networkString}${address}`\n    }\n    this.address = address\n    if (conf.signer) {\n      this.signer = conf.signer\n      this.alg = conf.alg\n      if (!this.alg) {\n        console.warn(\n          'A JWT signer was specified but no algorithm was set. Please set the `alg` parameter when calling `new EthrDID()`'\n        )\n      }\n    } else if (conf.privateKey) {\n      this.signer = ES256KSigner(hexToBytes(conf.privateKey), true)\n      this.alg = 'ES256K-R'\n    }\n  }\n\n  static createKeyPair(chainNameOrId?: string | number): KeyPair {\n    const wallet = Wallet.createRandom()\n    const privateKey = wallet.privateKey\n    const address = computeAddress(privateKey)\n    const publicKey = computePublicKey(privateKey, true)\n    const net = typeof chainNameOrId === 'number' ? hexValue(chainNameOrId) : chainNameOrId\n    const identifier = net ? `did:ethr:${net}:${publicKey}` : publicKey\n    return { address, privateKey, publicKey, identifier }\n  }\n\n  async lookupOwner(cache = true): Promise<string> {\n    if (typeof this.controller === 'undefined') {\n      throw new Error('a web3 provider configuration is needed for network operations')\n    }\n    if (cache && this.owner) return this.owner\n    return this.controller?.getOwner(this.address)\n  }\n\n  async changeOwner(newOwner: string, txOptions?: CallOverrides): Promise<string> {\n    if (typeof this.controller === 'undefined') {\n      throw new Error('a web3 provider configuration is needed for network operations')\n    }\n    const owner = await this.lookupOwner()\n    const receipt = await this.controller.changeOwner(newOwner, {\n      ...txOptions,\n      from: owner,\n    })\n    this.owner = newOwner\n    return receipt.transactionHash\n  }\n\n  async createChangeOwnerHash(newOwner: string): Promise<string> {\n    if (typeof this.controller === 'undefined') {\n      throw new Error('a web3 provider configuration is needed for network operations')\n    }\n    return this.controller.createChangeOwnerHash(newOwner)\n  }\n\n  async changeOwnerSigned(newOwner: string, signature: MetaSignature, txOptions: CallOverrides): Promise<string> {\n    if (typeof this.controller === 'undefined') {\n      throw new Error('a web3 provider configuration is needed for network operations')\n    }\n    const receipt = await this.controller.changeOwnerSigned(newOwner, signature, txOptions)\n    this.owner = newOwner\n    return receipt.transactionHash\n  }\n\n  async addDelegate(\n    delegate: string,\n    delegateOptions?: DelegateOptions,\n    txOptions: CallOverrides = {}\n  ): Promise<string> {\n    if (typeof this.controller === 'undefined') {\n      throw new Error('a web3 provider configuration is needed for network operations')\n    }\n    const owner = await this.lookupOwner()\n    const receipt = await this.controller.addDelegate(\n      delegateOptions?.delegateType || DelegateTypes.veriKey,\n      delegate,\n      delegateOptions?.expiresIn || 86400,\n      { ...txOptions, from: owner }\n    )\n    return receipt.transactionHash\n  }\n\n  async createAddDelegateHash(delegateType: string, delegateAddress: string, exp: number): Promise<string> {\n    if (typeof this.controller === 'undefined') {\n      throw new Error('a web3 provider configuration is needed for network operations')\n    }\n    return this.controller.createAddDelegateHash(delegateType, delegateAddress, exp)\n  }\n\n  async addDelegateSigned(\n    delegate: string,\n    signature: MetaSignature,\n    delegateOptions?: DelegateOptions,\n    txOptions: CallOverrides = {}\n  ): Promise<string> {\n    if (typeof this.controller === 'undefined') {\n      throw new Error('a web3 provider configuration is needed for network operations')\n    }\n    const receipt = await this.controller.addDelegateSigned(\n      delegateOptions?.delegateType || DelegateTypes.veriKey,\n      delegate,\n      delegateOptions?.expiresIn || 86400,\n      signature,\n      txOptions\n    )\n    return receipt.transactionHash\n  }\n\n  async revokeDelegate(\n    delegate: string,\n    delegateType = DelegateTypes.veriKey,\n    txOptions: CallOverrides = {}\n  ): Promise<string> {\n    if (typeof this.controller === 'undefined') {\n      throw new Error('a web3 provider configuration is needed for network operations')\n    }\n    const owner = await this.lookupOwner()\n    const receipt = await this.controller.revokeDelegate(delegateType, delegate, { ...txOptions, from: owner })\n    return receipt.transactionHash\n  }\n\n  async createRevokeDelegateHash(delegateType: string, delegateAddress: string): Promise<string> {\n    if (typeof this.controller === 'undefined') {\n      throw new Error('a web3 provider configuration is needed for network operations')\n    }\n    return this.controller.createRevokeDelegateHash(delegateType, delegateAddress)\n  }\n\n  async revokeDelegateSigned(\n    delegate: string,\n    delegateType = DelegateTypes.veriKey,\n    signature: MetaSignature,\n    txOptions: CallOverrides = {}\n  ): Promise<string> {\n    if (typeof this.controller === 'undefined') {\n      throw new Error('a web3 provider configuration is needed for network operations')\n    }\n    const receipt = await this.controller.revokeDelegateSigned(delegateType, delegate, signature, txOptions)\n    return receipt.transactionHash\n  }\n\n  async setAttribute(\n    key: string,\n    value: string | Uint8Array,\n    expiresIn = 86400,\n    /** @deprecated please use `txOptions.gasLimit` */\n    gasLimit?: number,\n    txOptions: CallOverrides = {}\n  ): Promise<string> {\n    if (typeof this.controller === 'undefined') {\n      throw new Error('a web3 provider configuration is needed for network operations')\n    }\n    const owner = await this.lookupOwner()\n    const receipt = await this.controller.setAttribute(key, attributeToHex(key, value), expiresIn, {\n      gasLimit,\n      ...txOptions,\n      from: owner,\n    })\n    return receipt.transactionHash\n  }\n\n  async createSetAttributeHash(attrName: string, attrValue: string, exp: number) {\n    if (typeof this.controller === 'undefined') {\n      throw new Error('a web3 provider configuration is needed for network operations')\n    }\n    return this.controller.createSetAttributeHash(attrName, attrValue, exp)\n  }\n\n  async setAttributeSigned(\n    key: string,\n    value: string | Uint8Array,\n    expiresIn = 86400,\n    signature: MetaSignature,\n    txOptions: CallOverrides = {}\n  ): Promise<string> {\n    if (typeof this.controller === 'undefined') {\n      throw new Error('a web3 provider configuration is needed for network operations')\n    }\n    const receipt = await this.controller.setAttributeSigned(\n      key,\n      attributeToHex(key, value),\n      expiresIn,\n      signature,\n      txOptions\n    )\n    return receipt.transactionHash\n  }\n\n  async revokeAttribute(\n    key: string,\n    value: string | Uint8Array,\n    /** @deprecated please use `txOptions.gasLimit` */\n    gasLimit?: number,\n    txOptions: CallOverrides = {}\n  ): Promise<string> {\n    if (typeof this.controller === 'undefined') {\n      throw new Error('a web3 provider configuration is needed for network operations')\n    }\n    const owner = await this.lookupOwner()\n    const receipt = await this.controller.revokeAttribute(key, attributeToHex(key, value), {\n      gasLimit,\n      ...txOptions,\n      from: owner,\n    })\n    return receipt.transactionHash\n  }\n\n  async createRevokeAttributeHash(attrName: string, attrValue: string) {\n    if (typeof this.controller === 'undefined') {\n      throw new Error('a web3 provider configuration is needed for network operations')\n    }\n    return this.controller.createRevokeAttributeHash(attrName, attrValue)\n  }\n\n  async revokeAttributeSigned(\n    key: string,\n    value: string | Uint8Array,\n    signature: MetaSignature,\n    txOptions: CallOverrides = {}\n  ): Promise<string> {\n    if (typeof this.controller === 'undefined') {\n      throw new Error('a web3 provider configuration is needed for network operations')\n    }\n    const receipt = await this.controller.revokeAttributeSigned(key, attributeToHex(key, value), signature, txOptions)\n    return receipt.transactionHash\n  }\n\n  // Create a temporary signing delegate able to sign JWT on behalf of identity\n  async createSigningDelegate(\n    delegateType = DelegateTypes.veriKey,\n    expiresIn = 86400,\n    pufHsmRemoteUrl: string\n  ): Promise<{ kp: KeyPair; txHash: string }| {address:string; pubkey:string; txHash: string }> {\n    if (typeof pufHsmRemoteUrl === 'string') {\n      const response = await fetch(`${pufHsmRemoteUrl}pufs_get_p256_pubkey_js`)\n      if (!response.ok) {\n        throw new Error(`createSigningDelegate HTTP error! status: ${response.status}`);\n      }\n      const jsonString: string = await response.text()\n      const pubkey = JSON.parse(jsonString).pubkey; \n      const address = toEthereumAddress(pubkey);\n      const txHash = await this.addDelegate(address, {\n        delegateType,\n        expiresIn,\n      })\n    return { address, pubkey, txHash }\n\n    } else {\n\n      const kp = EthrDID.createKeyPair()\n      this.signer = ES256KSigner(hexToBytes(kp.privateKey), true)\n      const txHash = await this.addDelegate(kp.address, {\n        delegateType,\n        expiresIn,\n      })\n      return { kp, txHash }\n\n    }\n\n  }\n\n  // eslint-disable-next-line\n  async signJWT(payload: any, expiresIn?: number, pufHsmRemoteUrl?:string): Promise<string> {\n    \n    if (typeof pufHsmRemoteUrl === 'string') {\n      this.signer = ES256HSMSigner(pufHsmRemoteUrl)\n    }\n    if (typeof this.signer !== 'function') {\n      throw new Error('No signer configured')\n    }\n    const options = {\n      signer: this.signer,\n      alg: 'ES256',\n      issuer: this.did,\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    if (expiresIn) (<any>options)['expiresIn'] = expiresIn\n    return createJWT(payload, options)\n  }\n\n  async verifyJWT(jwt: string, resolver: Resolvable, audience = this.did): Promise<JWTVerified> {\n    return verifyJWT(jwt, { resolver, audience })\n  }\n}\n\nfunction attributeToHex(key: string, value: string | Uint8Array): string {\n  if (value instanceof Uint8Array || isBytes(value)) {\n    return hexlify(value)\n  }\n  const matchKeyWithEncoding = key.match(/^did\\/(pub|auth|svc)\\/(\\w+)(\\/(\\w+))?(\\/(\\w+))?$/)\n  const encoding = matchKeyWithEncoding?.[6]\n  const matchHexString = (<string>value).match(/^0x[0-9a-fA-F]*$/)\n  if (encoding && !matchHexString) {\n    if (encoding === 'base64') {\n      return hexlify(base64.decode(value))\n    }\n    if (encoding === 'base58') {\n      return hexlify(Base58.decode(value))\n    }\n  } else if (matchHexString) {\n    return <string>value\n  }\n\n  return hexlify(toUtf8Bytes(value))\n}"],"names":["DelegateTypes","EthrDID","constructor","conf","did","address","signer","alg","owner","controller","publicKey","network","interpretIdentifier","identifier","chainNameOrId","hexValue","provider","rpcUrl","web3","txSigner","privateKey","Wallet","EthrDidController","undefined","currentProvider","registry","REGISTRY","net","networkString","console","warn","ES256KSigner","hexToBytes","createKeyPair","wallet","createRandom","computeAddress","computePublicKey","lookupOwner","cache","_this","Error","Promise","resolve","getOwner","e","reject","changeOwner","newOwner","txOptions","_this2","then","from","receipt","transactionHash","createChangeOwnerHash","_this3","changeOwnerSigned","signature","_this4","addDelegate","delegate","delegateOptions","_this5","delegateType","veriKey","expiresIn","createAddDelegateHash","delegateAddress","exp","_this6","addDelegateSigned","_this7","revokeDelegate","_this8","createRevokeDelegateHash","_this9","revokeDelegateSigned","_this10","setAttribute","key","value","gasLimit","_this11","attributeToHex","createSetAttributeHash","attrName","attrValue","_this12","setAttributeSigned","_this13","revokeAttribute","_this14","createRevokeAttributeHash","_this15","revokeAttributeSigned","_this16","createSigningDelegate","pufHsmRemoteUrl","_this17","fetch","response","ok","status","text","jsonString","pubkey","JSON","parse","toEthereumAddress","txHash","kp","signJWT","payload","_this18","ES256HSMSigner","options","issuer","createJWT","verifyJWT","jwt","resolver","audience","_this19","Uint8Array","isBytes","hexlify","matchKeyWithEncoding","match","encoding","matchHexString","base64","decode","Base58","toUtf8Bytes"],"mappings":"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"}