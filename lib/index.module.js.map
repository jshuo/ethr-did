{"version":3,"file":"index.module.js","sources":["../src/index.ts"],"sourcesContent":["import { createJWT, ES256KSigner, ES256Signer, hexToBytes, JWTVerified, Signer as JWTSigner, verifyJWT, toEthereumAddress } from 'did-jwt'\nimport { Signer as TxSigner } from '@ethersproject/abstract-signer'\nimport { CallOverrides } from '@ethersproject/contracts'\nimport { Provider } from '@ethersproject/providers'\nimport { Wallet } from '@ethersproject/wallet'\nimport * as base64 from '@ethersproject/base64'\nimport { hexlify, hexValue, isBytes } from '@ethersproject/bytes'\nimport { Base58 } from '@ethersproject/basex'\nimport { toUtf8Bytes } from '@ethersproject/strings'\nimport { EthrDidController, interpretIdentifier, MetaSignature, REGISTRY } from 'ethr-did-resolver'\nimport { Resolvable } from 'did-resolver'\nimport { ec as EC } from 'elliptic';\n\nexport enum DelegateTypes {\n  veriKey = 'veriKey',\n  sigAuth = 'sigAuth',\n  enc = 'enc',\n}\n\ninterface IConfig {\n  identifier: string\n  chainNameOrId?: string | number\n\n  registry?: string\n\n  signer?: JWTSigner\n  alg?: 'ES256K' | 'ES256K-R'\n  txSigner?: TxSigner\n  privateKey?: string\n\n  rpcUrl?: string\n  provider?: Provider\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  web3?: any\n}\n\nexport type KeyPair = {\n  address: string\n  privateKey: string\n  publicKey: string\n  identifier: string\n}\n\ntype DelegateOptions = {\n  delegateType?: DelegateTypes\n  expiresIn?: number\n}\n\nexport class EthrDID {\n  public did: string\n  public address: string\n  public signer?: JWTSigner\n  public alg?: 'ES256K' | 'ES256K-R'\n  private owner?: string\n  private controller?: EthrDidController\n\n  constructor(conf: IConfig) {\n    const { address, publicKey, network } = interpretIdentifier(conf.identifier)\n    const chainNameOrId = typeof conf.chainNameOrId === 'number' ? hexValue(conf.chainNameOrId) : conf.chainNameOrId\n    if (conf.provider || conf.rpcUrl || conf.web3) {\n      let txSigner = conf.txSigner\n      if (conf.privateKey && typeof txSigner === 'undefined') {\n        txSigner = new Wallet(conf.privateKey)\n      }\n      this.controller = new EthrDidController(\n        conf.identifier,\n        undefined,\n        txSigner,\n        chainNameOrId,\n        conf.provider || conf.web3?.currentProvider,\n        conf.rpcUrl,\n        conf.registry || REGISTRY\n      )\n      this.did = this.controller.did\n    } else {\n      const net = network || chainNameOrId\n      let networkString = net ? `${net}:` : ''\n      if (networkString in ['mainnet:', '0x1:']) {\n        networkString = ''\n      }\n      this.did =\n        typeof publicKey === 'string' ? `did:ethr:${networkString}${publicKey}` : `did:ethr:${networkString}${address}`\n    }\n    this.address = address\n    if (conf.signer) {\n      this.signer = conf.signer\n      this.alg = conf.alg\n      if (!this.alg) {\n        console.warn(\n          'A JWT signer was specified but no algorithm was set. Please set the `alg` parameter when calling `new EthrDID()`'\n        )\n      }\n    } else if (conf.privateKey) {\n      this.signer = ES256KSigner(hexToBytes(conf.privateKey), true)\n      this.alg = 'ES256K-R'\n    }\n  }\n\n  static createKeyPair(chainNameOrId?: string | number): KeyPair {\n    const ec = new EC('p256'); // 'p256' is another name for secp256r1\n    // var key = ec.genKeyPair();\n    const privateKey =\n      '736f625c9dda78a94bb16840c82779bb7bc18014b8ede52f0f03429902fc4ba8';\n    const key = ec.keyFromPrivate(privateKey);\n    const publicKey = key.getPublic().encode(\"hex\", false);\n    const address = toEthereumAddress(publicKey)\n    const net = typeof chainNameOrId === 'number' ? hexValue(chainNameOrId) : chainNameOrId\n    const identifier = net ? `did:ethr:${net}:${publicKey}` : publicKey\n    return { address, privateKey, publicKey, identifier }\n  }\n\n  async lookupOwner(cache = true): Promise<string> {\n    if (typeof this.controller === 'undefined') {\n      throw new Error('a web3 provider configuration is needed for network operations')\n    }\n    if (cache && this.owner) return this.owner\n    return this.controller?.getOwner(this.address)\n  }\n\n  async changeOwner(newOwner: string, txOptions?: CallOverrides): Promise<string> {\n    if (typeof this.controller === 'undefined') {\n      throw new Error('a web3 provider configuration is needed for network operations')\n    }\n    const owner = await this.lookupOwner()\n    const receipt = await this.controller.changeOwner(newOwner, {\n      ...txOptions,\n      from: owner,\n    })\n    this.owner = newOwner\n    return receipt.transactionHash\n  }\n\n  async createChangeOwnerHash(newOwner: string): Promise<string> {\n    if (typeof this.controller === 'undefined') {\n      throw new Error('a web3 provider configuration is needed for network operations')\n    }\n    return this.controller.createChangeOwnerHash(newOwner)\n  }\n\n  async changeOwnerSigned(newOwner: string, signature: MetaSignature, txOptions: CallOverrides): Promise<string> {\n    if (typeof this.controller === 'undefined') {\n      throw new Error('a web3 provider configuration is needed for network operations')\n    }\n    const receipt = await this.controller.changeOwnerSigned(newOwner, signature, txOptions)\n    this.owner = newOwner\n    return receipt.transactionHash\n  }\n\n  async addDelegate(\n    delegate: string,\n    delegateOptions?: DelegateOptions,\n    txOptions: CallOverrides = {}\n  ): Promise<string> {\n    if (typeof this.controller === 'undefined') {\n      throw new Error('a web3 provider configuration is needed for network operations')\n    }\n    const owner = await this.lookupOwner()\n    const receipt = await this.controller.addDelegate(\n      delegateOptions?.delegateType || DelegateTypes.veriKey,\n      delegate,\n      delegateOptions?.expiresIn || 86400,\n      { ...txOptions, from: owner }\n    )\n    return receipt.transactionHash\n  }\n\n  async createAddDelegateHash(delegateType: string, delegateAddress: string, exp: number): Promise<string> {\n    if (typeof this.controller === 'undefined') {\n      throw new Error('a web3 provider configuration is needed for network operations')\n    }\n    return this.controller.createAddDelegateHash(delegateType, delegateAddress, exp)\n  }\n\n  async addDelegateSigned(\n    delegate: string,\n    signature: MetaSignature,\n    delegateOptions?: DelegateOptions,\n    txOptions: CallOverrides = {}\n  ): Promise<string> {\n    if (typeof this.controller === 'undefined') {\n      throw new Error('a web3 provider configuration is needed for network operations')\n    }\n    const receipt = await this.controller.addDelegateSigned(\n      delegateOptions?.delegateType || DelegateTypes.veriKey,\n      delegate,\n      delegateOptions?.expiresIn || 86400,\n      signature,\n      txOptions\n    )\n    return receipt.transactionHash\n  }\n\n  async revokeDelegate(\n    delegate: string,\n    delegateType = DelegateTypes.veriKey,\n    txOptions: CallOverrides = {}\n  ): Promise<string> {\n    if (typeof this.controller === 'undefined') {\n      throw new Error('a web3 provider configuration is needed for network operations')\n    }\n    const owner = await this.lookupOwner()\n    const receipt = await this.controller.revokeDelegate(delegateType, delegate, { ...txOptions, from: owner })\n    return receipt.transactionHash\n  }\n\n  async createRevokeDelegateHash(delegateType: string, delegateAddress: string): Promise<string> {\n    if (typeof this.controller === 'undefined') {\n      throw new Error('a web3 provider configuration is needed for network operations')\n    }\n    return this.controller.createRevokeDelegateHash(delegateType, delegateAddress)\n  }\n\n  async revokeDelegateSigned(\n    delegate: string,\n    delegateType = DelegateTypes.veriKey,\n    signature: MetaSignature,\n    txOptions: CallOverrides = {}\n  ): Promise<string> {\n    if (typeof this.controller === 'undefined') {\n      throw new Error('a web3 provider configuration is needed for network operations')\n    }\n    const receipt = await this.controller.revokeDelegateSigned(delegateType, delegate, signature, txOptions)\n    return receipt.transactionHash\n  }\n\n  async setAttribute(\n    key: string,\n    value: string | Uint8Array,\n    expiresIn = 86400,\n    /** @deprecated please use `txOptions.gasLimit` */\n    gasLimit?: number,\n    txOptions: CallOverrides = {}\n  ): Promise<string> {\n    if (typeof this.controller === 'undefined') {\n      throw new Error('a web3 provider configuration is needed for network operations')\n    }\n    const owner = await this.lookupOwner()\n    const receipt = await this.controller.setAttribute(key, attributeToHex(key, value), expiresIn, {\n      gasLimit,\n      ...txOptions,\n      from: owner,\n    })\n    return receipt.transactionHash\n  }\n\n  async createSetAttributeHash(attrName: string, attrValue: string, exp: number) {\n    if (typeof this.controller === 'undefined') {\n      throw new Error('a web3 provider configuration is needed for network operations')\n    }\n    return this.controller.createSetAttributeHash(attrName, attrValue, exp)\n  }\n\n  async setAttributeSigned(\n    key: string,\n    value: string | Uint8Array,\n    expiresIn = 86400,\n    signature: MetaSignature,\n    txOptions: CallOverrides = {}\n  ): Promise<string> {\n    if (typeof this.controller === 'undefined') {\n      throw new Error('a web3 provider configuration is needed for network operations')\n    }\n    const receipt = await this.controller.setAttributeSigned(\n      key,\n      attributeToHex(key, value),\n      expiresIn,\n      signature,\n      txOptions\n    )\n    return receipt.transactionHash\n  }\n\n  async revokeAttribute(\n    key: string,\n    value: string | Uint8Array,\n    /** @deprecated please use `txOptions.gasLimit` */\n    gasLimit?: number,\n    txOptions: CallOverrides = {}\n  ): Promise<string> {\n    if (typeof this.controller === 'undefined') {\n      throw new Error('a web3 provider configuration is needed for network operations')\n    }\n    const owner = await this.lookupOwner()\n    const receipt = await this.controller.revokeAttribute(key, attributeToHex(key, value), {\n      gasLimit,\n      ...txOptions,\n      from: owner,\n    })\n    return receipt.transactionHash\n  }\n\n  async createRevokeAttributeHash(attrName: string, attrValue: string) {\n    if (typeof this.controller === 'undefined') {\n      throw new Error('a web3 provider configuration is needed for network operations')\n    }\n    return this.controller.createRevokeAttributeHash(attrName, attrValue)\n  }\n\n  async revokeAttributeSigned(\n    key: string,\n    value: string | Uint8Array,\n    signature: MetaSignature,\n    txOptions: CallOverrides = {}\n  ): Promise<string> {\n    if (typeof this.controller === 'undefined') {\n      throw new Error('a web3 provider configuration is needed for network operations')\n    }\n    const receipt = await this.controller.revokeAttributeSigned(key, attributeToHex(key, value), signature, txOptions)\n    return receipt.transactionHash\n  }\n\n  // Create a temporary signing delegate able to sign JWT on behalf of identity\n  async createSigningDelegate(\n    delegateType = DelegateTypes.veriKey,\n    expiresIn = 86400\n  ): Promise<{ kp: KeyPair; txHash: string }> {\n    const kp = EthrDID.createKeyPair()\n    this.signer = ES256Signer(hexToBytes(kp.privateKey))\n    const txHash = await this.addDelegate(kp.address, {\n      delegateType,\n      expiresIn,\n    })\n    return { kp, txHash }\n  }\n\n  // eslint-disable-next-line\n  async signJWT(payload: any, expiresIn?: number): Promise<string> {\n    if (typeof this.signer !== 'function') {\n      throw new Error('No signer configured')\n    }\n    const options = {\n      signer: this.signer,\n      alg: 'ES256',\n      issuer: this.did,\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    if (expiresIn) (<any>options)['expiresIn'] = expiresIn\n    return createJWT(payload, options)\n  }\n\n  async verifyJWT(jwt: string, resolver: Resolvable, audience = this.did): Promise<JWTVerified> {\n    return verifyJWT(jwt, { resolver, audience })\n  }\n}\n\nfunction attributeToHex(key: string, value: string | Uint8Array): string {\n  if (value instanceof Uint8Array || isBytes(value)) {\n    return hexlify(value)\n  }\n  const matchKeyWithEncoding = key.match(/^did\\/(pub|auth|svc)\\/(\\w+)(\\/(\\w+))?(\\/(\\w+))?$/)\n  const encoding = matchKeyWithEncoding?.[6]\n  const matchHexString = (<string>value).match(/^0x[0-9a-fA-F]*$/)\n  if (encoding && !matchHexString) {\n    if (encoding === 'base64') {\n      return hexlify(base64.decode(value))\n    }\n    if (encoding === 'base58') {\n      return hexlify(Base58.decode(value))\n    }\n  } else if (matchHexString) {\n    return <string>value\n  }\n\n  return hexlify(toUtf8Bytes(value))\n}\n"],"names":["DelegateTypes","EthrDID","constructor","conf","did","address","signer","alg","owner","controller","publicKey","network","interpretIdentifier","identifier","chainNameOrId","hexValue","provider","rpcUrl","web3","txSigner","privateKey","Wallet","EthrDidController","undefined","currentProvider","registry","REGISTRY","net","networkString","console","warn","ES256KSigner","hexToBytes","createKeyPair","ec","EC","key","keyFromPrivate","getPublic","encode","toEthereumAddress","lookupOwner","cache","Error","getOwner","changeOwner","newOwner","txOptions","from","receipt","transactionHash","createChangeOwnerHash","changeOwnerSigned","signature","addDelegate","delegate","delegateOptions","delegateType","veriKey","expiresIn","createAddDelegateHash","delegateAddress","exp","addDelegateSigned","revokeDelegate","createRevokeDelegateHash","revokeDelegateSigned","setAttribute","value","gasLimit","attributeToHex","createSetAttributeHash","attrName","attrValue","setAttributeSigned","revokeAttribute","createRevokeAttributeHash","revokeAttributeSigned","createSigningDelegate","kp","ES256Signer","txHash","signJWT","payload","options","issuer","createJWT","verifyJWT","jwt","resolver","audience","Uint8Array","isBytes","hexlify","matchKeyWithEncoding","match","encoding","matchHexString","base64","decode","Base58","toUtf8Bytes"],"mappings":"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"}