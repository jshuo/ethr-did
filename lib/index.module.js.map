{"version":3,"file":"index.module.js","sources":["../src/index.ts"],"sourcesContent":["import { createJWT,  ES256HSMSigner,ES256Signer, ES256KSigner, hexToBytes, JWTVerified, Signer as JWTSigner, verifyJWT,  toEthereumAddress } from 'did-jwt'\nimport { Signer as TxSigner } from '@ethersproject/abstract-signer'\nimport { CallOverrides } from '@ethersproject/contracts'\nimport { computeAddress } from '@ethersproject/transactions'\nimport { computePublicKey } from '@ethersproject/signing-key'\nimport { Provider } from '@ethersproject/providers'\nimport { Wallet } from '@ethersproject/wallet'\nimport * as base64 from '@ethersproject/base64'\nimport { hexlify, hexValue, isBytes } from '@ethersproject/bytes'\nimport { Base58 } from '@ethersproject/basex'\nimport { toUtf8Bytes } from '@ethersproject/strings'\nimport { EthrDidController, interpretIdentifier, MetaSignature, REGISTRY } from 'ethr-did-resolver'\nimport { Resolvable } from 'did-resolver'\nimport { ec as EC } from 'elliptic';\n\nexport enum DelegateTypes {\n  veriKey = 'veriKey',\n  sigAuth = 'sigAuth',\n  enc = 'enc',\n}\n\ninterface IConfig {\n  identifier: string\n  chainNameOrId?: string | number\n\n  registry?: string\n\n  signer?: JWTSigner\n  alg?: 'ES256K' | 'ES256K-R'\n  txSigner?: TxSigner\n  privateKey?: string\n\n  rpcUrl?: string\n  provider?: Provider\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  web3?: any\n}\n\nexport type KeyPair = {\n  address: string\n  privateKey: string\n  publicKey: string\n  identifier: string\n}\n\ntype DelegateOptions = {\n  delegateType?: DelegateTypes\n  expiresIn?: number\n}\n\nexport class EthrDID {\n  public did: string\n  public address: string\n  public signer?: JWTSigner\n  public alg?: 'ES256K' | 'ES256K-R'\n  private owner?: string\n  private controller?: EthrDidController\n\n  constructor(conf: IConfig) {\n    const { address, publicKey, network } = interpretIdentifier(conf.identifier)\n    const chainNameOrId = typeof conf.chainNameOrId === 'number' ? hexValue(conf.chainNameOrId) : conf.chainNameOrId\n    if (conf.provider || conf.rpcUrl || conf.web3) {\n      let txSigner = conf.txSigner\n      if (conf.privateKey && typeof txSigner === 'undefined') {\n        txSigner = new Wallet(conf.privateKey)\n      }\n      this.controller = new EthrDidController(\n        conf.identifier,\n        undefined,\n        txSigner,\n        chainNameOrId,\n        conf.provider || conf.web3?.currentProvider,\n        conf.rpcUrl,\n        conf.registry || REGISTRY\n      )\n      this.did = this.controller.did\n    } else {\n      const net = network || chainNameOrId\n      let networkString = net ? `${net}:` : ''\n      if (networkString in ['mainnet:', '0x1:']) {\n        networkString = ''\n      }\n      this.did =\n        typeof publicKey === 'string' ? `did:ethr:${networkString}${publicKey}` : `did:ethr:${networkString}${address}`\n    }\n    this.address = address\n    if (conf.signer) {\n      this.signer = conf.signer\n      this.alg = conf.alg\n      if (!this.alg) {\n        console.warn(\n          'A JWT signer was specified but no algorithm was set. Please set the `alg` parameter when calling `new EthrDID()`'\n        )\n      }\n    } else if (conf.privateKey) {\n      this.signer = ES256KSigner(hexToBytes(conf.privateKey), true)\n      this.alg = 'ES256K-R'\n    }\n  }\n\n  static createKeyPair(chainNameOrId?: string | number): KeyPair {\n    const ec = new EC('p256'); // 'p256' is another name for secp256r1\n    // var key = ec.genKeyPair();\n    // const privateKey = '0x' + key.getPrivate('hex');\n    // hard code privatekey for fixing\n    const privateKey =\n      '736f625c9dda78a94bb16840c82779bb7bc18014b8ede52f0f03429902fc4ba8';\n    const key = ec.keyFromPrivate(privateKey);\n\n    const publicKey = key.getPublic().encode(\"hex\", false);\n    const address = toEthereumAddress(publicKey)\n    const net = typeof chainNameOrId === 'number' ? hexValue(chainNameOrId) : chainNameOrId\n    const identifier = net ? `did:ethr:${net}:${publicKey}` : publicKey\n    return { address, privateKey, publicKey, identifier }\n    return { address, privateKey, publicKey, identifier }\n  }\n\n  async lookupOwner(cache = true): Promise<string> {\n    if (typeof this.controller === 'undefined') {\n      throw new Error('a web3 provider configuration is needed for network operations')\n    }\n    if (cache && this.owner) return this.owner\n    return this.controller?.getOwner(this.address)\n  }\n\n  async changeOwner(newOwner: string, txOptions?: CallOverrides): Promise<string> {\n    if (typeof this.controller === 'undefined') {\n      throw new Error('a web3 provider configuration is needed for network operations')\n    }\n    const owner = await this.lookupOwner()\n    const receipt = await this.controller.changeOwner(newOwner, {\n      ...txOptions,\n      from: owner,\n    })\n    this.owner = newOwner\n    return receipt.transactionHash\n  }\n\n  async createChangeOwnerHash(newOwner: string): Promise<string> {\n    if (typeof this.controller === 'undefined') {\n      throw new Error('a web3 provider configuration is needed for network operations')\n    }\n    return this.controller.createChangeOwnerHash(newOwner)\n  }\n\n  async changeOwnerSigned(newOwner: string, signature: MetaSignature, txOptions: CallOverrides): Promise<string> {\n    if (typeof this.controller === 'undefined') {\n      throw new Error('a web3 provider configuration is needed for network operations')\n    }\n    const receipt = await this.controller.changeOwnerSigned(newOwner, signature, txOptions)\n    this.owner = newOwner\n    return receipt.transactionHash\n  }\n\n  async addDelegate(\n    delegate: string,\n    delegateOptions?: DelegateOptions,\n    txOptions: CallOverrides = {}\n  ): Promise<string> {\n    if (typeof this.controller === 'undefined') {\n      throw new Error('a web3 provider configuration is needed for network operations')\n    }\n    const owner = await this.lookupOwner()\n    const receipt = await this.controller.addDelegate(\n      delegateOptions?.delegateType || DelegateTypes.veriKey,\n      delegate,\n      delegateOptions?.expiresIn || 86400,\n      { ...txOptions, from: owner }\n    )\n    return receipt.transactionHash\n  }\n\n  async createAddDelegateHash(delegateType: string, delegateAddress: string, exp: number): Promise<string> {\n    if (typeof this.controller === 'undefined') {\n      throw new Error('a web3 provider configuration is needed for network operations')\n    }\n    return this.controller.createAddDelegateHash(delegateType, delegateAddress, exp)\n  }\n\n  async addDelegateSigned(\n    delegate: string,\n    signature: MetaSignature,\n    delegateOptions?: DelegateOptions,\n    txOptions: CallOverrides = {}\n  ): Promise<string> {\n    if (typeof this.controller === 'undefined') {\n      throw new Error('a web3 provider configuration is needed for network operations')\n    }\n    const receipt = await this.controller.addDelegateSigned(\n      delegateOptions?.delegateType || DelegateTypes.veriKey,\n      delegate,\n      delegateOptions?.expiresIn || 86400,\n      signature,\n      txOptions\n    )\n    return receipt.transactionHash\n  }\n\n  async revokeDelegate(\n    delegate: string,\n    delegateType = DelegateTypes.veriKey,\n    txOptions: CallOverrides = {}\n  ): Promise<string> {\n    if (typeof this.controller === 'undefined') {\n      throw new Error('a web3 provider configuration is needed for network operations')\n    }\n    const owner = await this.lookupOwner()\n    const receipt = await this.controller.revokeDelegate(delegateType, delegate, { ...txOptions, from: owner })\n    return receipt.transactionHash\n  }\n\n  async createRevokeDelegateHash(delegateType: string, delegateAddress: string): Promise<string> {\n    if (typeof this.controller === 'undefined') {\n      throw new Error('a web3 provider configuration is needed for network operations')\n    }\n    return this.controller.createRevokeDelegateHash(delegateType, delegateAddress)\n  }\n\n  async revokeDelegateSigned(\n    delegate: string,\n    delegateType = DelegateTypes.veriKey,\n    signature: MetaSignature,\n    txOptions: CallOverrides = {}\n  ): Promise<string> {\n    if (typeof this.controller === 'undefined') {\n      throw new Error('a web3 provider configuration is needed for network operations')\n    }\n    const receipt = await this.controller.revokeDelegateSigned(delegateType, delegate, signature, txOptions)\n    return receipt.transactionHash\n  }\n\n  async setAttribute(\n    key: string,\n    value: string | Uint8Array,\n    expiresIn = 86400,\n    /** @deprecated please use `txOptions.gasLimit` */\n    gasLimit?: number,\n    txOptions: CallOverrides = {}\n  ): Promise<string> {\n    if (typeof this.controller === 'undefined') {\n      throw new Error('a web3 provider configuration is needed for network operations')\n    }\n    const owner = await this.lookupOwner()\n    const receipt = await this.controller.setAttribute(key, attributeToHex(key, value), expiresIn, {\n      gasLimit,\n      ...txOptions,\n      from: owner,\n    })\n    return receipt.transactionHash\n  }\n\n  async createSetAttributeHash(attrName: string, attrValue: string, exp: number) {\n    if (typeof this.controller === 'undefined') {\n      throw new Error('a web3 provider configuration is needed for network operations')\n    }\n    return this.controller.createSetAttributeHash(attrName, attrValue, exp)\n  }\n\n  async setAttributeSigned(\n    key: string,\n    value: string | Uint8Array,\n    expiresIn = 86400,\n    signature: MetaSignature,\n    txOptions: CallOverrides = {}\n  ): Promise<string> {\n    if (typeof this.controller === 'undefined') {\n      throw new Error('a web3 provider configuration is needed for network operations')\n    }\n    const receipt = await this.controller.setAttributeSigned(\n      key,\n      attributeToHex(key, value),\n      expiresIn,\n      signature,\n      txOptions\n    )\n    return receipt.transactionHash\n  }\n\n  async revokeAttribute(\n    key: string,\n    value: string | Uint8Array,\n    /** @deprecated please use `txOptions.gasLimit` */\n    gasLimit?: number,\n    txOptions: CallOverrides = {}\n  ): Promise<string> {\n    if (typeof this.controller === 'undefined') {\n      throw new Error('a web3 provider configuration is needed for network operations')\n    }\n    const owner = await this.lookupOwner()\n    const receipt = await this.controller.revokeAttribute(key, attributeToHex(key, value), {\n      gasLimit,\n      ...txOptions,\n      from: owner,\n    })\n    return receipt.transactionHash\n  }\n\n  async createRevokeAttributeHash(attrName: string, attrValue: string) {\n    if (typeof this.controller === 'undefined') {\n      throw new Error('a web3 provider configuration is needed for network operations')\n    }\n    return this.controller.createRevokeAttributeHash(attrName, attrValue)\n  }\n\n  async revokeAttributeSigned(\n    key: string,\n    value: string | Uint8Array,\n    signature: MetaSignature,\n    txOptions: CallOverrides = {}\n  ): Promise<string> {\n    if (typeof this.controller === 'undefined') {\n      throw new Error('a web3 provider configuration is needed for network operations')\n    }\n    const receipt = await this.controller.revokeAttributeSigned(key, attributeToHex(key, value), signature, txOptions)\n    return receipt.transactionHash\n  }\n\n  // Create a temporary signing delegate able to sign JWT on behalf of identity\n  async createSigningDelegate(\n    delegateType = DelegateTypes.veriKey,\n    expiresIn = 86400,\n    pufHsmRemoteUrl: string\n  ): Promise<{address:string; pubkey:string; txHash: string }> {\n\n    let address:string, pubkey:string\n\n    if (typeof pufHsmRemoteUrl === 'string') {\n      const response = await fetch(`${pufHsmRemoteUrl}pufs_get_p256_pubkey_js`)\n      if (!response.ok) {\n        throw new Error(`createSigningDelegate HTTP error! status: ${response.status}`);\n      }\n      const jsonString: string = await response.text()\n      pubkey = JSON.parse(jsonString).pubkey; \n      address = toEthereumAddress(pubkey);\n     } else {\n      const kp: KeyPair = EthrDID.createKeyPair()\n      address = kp.address;\n      pubkey = kp.publicKey\n    }\n    const txHash = await this.addDelegate(address, {\n      delegateType,\n      expiresIn,\n    })\n    return { address, pubkey , txHash }\n\n  }\n\n  // eslint-disable-next-line\n  async signJWT(payload: any, expiresIn?: number, pufHsmRemoteUrl?:string): Promise<string> {\n    \n    if (typeof pufHsmRemoteUrl === 'string') {\n      this.signer = ES256HSMSigner(pufHsmRemoteUrl)\n    } else {\n      this.signer = ES256Signer(hexToBytes(\"736f625c9dda78a94bb16840c82779bb7bc18014b8ede52f0f03429902fc4ba8\"))\n    }\n    if (typeof this.signer !== 'function') {\n      throw new Error('No signer configured')\n    }\n    const options = {\n      signer: this.signer,\n      alg: 'ES256',\n      issuer: this.did,\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    if (expiresIn) (<any>options)['expiresIn'] = expiresIn\n    return createJWT(payload, options)\n  }\n\n  async verifyJWT(jwt: string, resolver: Resolvable, audience = this.did): Promise<JWTVerified> {\n    return verifyJWT(jwt, { resolver, audience })\n  }\n}\n\nfunction attributeToHex(key: string, value: string | Uint8Array): string {\n  if (value instanceof Uint8Array || isBytes(value)) {\n    return hexlify(value)\n  }\n  const matchKeyWithEncoding = key.match(/^did\\/(pub|auth|svc)\\/(\\w+)(\\/(\\w+))?(\\/(\\w+))?$/)\n  const encoding = matchKeyWithEncoding?.[6]\n  const matchHexString = (<string>value).match(/^0x[0-9a-fA-F]*$/)\n  if (encoding && !matchHexString) {\n    if (encoding === 'base64') {\n      return hexlify(base64.decode(value))\n    }\n    if (encoding === 'base58') {\n      return hexlify(Base58.decode(value))\n    }\n  } else if (matchHexString) {\n    return <string>value\n  }\n\n  return hexlify(toUtf8Bytes(value))\n}"],"names":["DelegateTypes","EthrDID","constructor","conf","did","address","signer","alg","owner","controller","publicKey","network","interpretIdentifier","identifier","chainNameOrId","hexValue","provider","rpcUrl","web3","txSigner","privateKey","Wallet","EthrDidController","undefined","currentProvider","registry","REGISTRY","net","networkString","console","warn","ES256KSigner","hexToBytes","createKeyPair","ec","EC","key","keyFromPrivate","getPublic","encode","toEthereumAddress","lookupOwner","cache","_this","Error","Promise","resolve","getOwner","e","reject","changeOwner","newOwner","txOptions","_this2","then","from","receipt","transactionHash","createChangeOwnerHash","_this3","changeOwnerSigned","signature","_this4","addDelegate","delegate","delegateOptions","_this5","delegateType","veriKey","expiresIn","createAddDelegateHash","delegateAddress","exp","_this6","addDelegateSigned","_this7","revokeDelegate","_this8","createRevokeDelegateHash","_this9","revokeDelegateSigned","_this10","setAttribute","value","gasLimit","_this11","attributeToHex","createSetAttributeHash","attrName","attrValue","_this12","setAttributeSigned","_this13","revokeAttribute","_this14","createRevokeAttributeHash","_this15","revokeAttributeSigned","_this16","createSigningDelegate","pufHsmRemoteUrl","_exit","_this17","_temp2","_result","txHash","pubkey","_temp","fetch","response","ok","status","text","jsonString","JSON","parse","kp","signJWT","payload","_this18","ES256HSMSigner","ES256Signer","options","issuer","createJWT","verifyJWT","jwt","resolver","audience","_this19","Uint8Array","isBytes","hexlify","matchKeyWithEncoding","match","encoding","matchHexString","base64","decode","Base58","toUtf8Bytes"],"mappings":"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"}