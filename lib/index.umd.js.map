{"version":3,"file":"index.umd.js","sources":["../src/index.ts"],"sourcesContent":["import { createJWT,  ES256HSMSigner,ES256KSigner, hexToBytes, JWTVerified, Signer as JWTSigner, verifyJWT,  toEthereumAddress } from 'did-jwt'\nimport { Signer as TxSigner } from '@ethersproject/abstract-signer'\nimport { CallOverrides } from '@ethersproject/contracts'\nimport { computeAddress } from '@ethersproject/transactions'\nimport { computePublicKey } from '@ethersproject/signing-key'\nimport { Provider } from '@ethersproject/providers'\nimport { Wallet } from '@ethersproject/wallet'\nimport * as base64 from '@ethersproject/base64'\nimport { hexlify, hexValue, isBytes } from '@ethersproject/bytes'\nimport { Base58 } from '@ethersproject/basex'\nimport { toUtf8Bytes } from '@ethersproject/strings'\nimport { EthrDidController, interpretIdentifier, MetaSignature, REGISTRY } from 'ethr-did-resolver'\nimport { Resolvable } from 'did-resolver'\n\nexport enum DelegateTypes {\n  veriKey = 'veriKey',\n  sigAuth = 'sigAuth',\n  enc = 'enc',\n}\n\ninterface IConfig {\n  identifier: string\n  chainNameOrId?: string | number\n\n  registry?: string\n\n  signer?: JWTSigner\n  alg?: 'ES256K' | 'ES256K-R'\n  txSigner?: TxSigner\n  privateKey?: string\n\n  rpcUrl?: string\n  provider?: Provider\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  web3?: any\n}\n\nexport type KeyPair = {\n  address: string\n  privateKey: string\n  publicKey: string\n  identifier: string\n}\n\ntype DelegateOptions = {\n  delegateType?: DelegateTypes\n  expiresIn?: number\n}\n\nexport class EthrDID {\n  public did: string\n  public address: string\n  public signer?: JWTSigner\n  public alg?: 'ES256K' | 'ES256K-R'\n  private owner?: string\n  private controller?: EthrDidController\n\n  constructor(conf: IConfig) {\n    const { address, publicKey, network } = interpretIdentifier(conf.identifier)\n    const chainNameOrId = typeof conf.chainNameOrId === 'number' ? hexValue(conf.chainNameOrId) : conf.chainNameOrId\n    if (conf.provider || conf.rpcUrl || conf.web3) {\n      let txSigner = conf.txSigner\n      if (conf.privateKey && typeof txSigner === 'undefined') {\n        txSigner = new Wallet(conf.privateKey)\n      }\n      this.controller = new EthrDidController(\n        conf.identifier,\n        undefined,\n        txSigner,\n        chainNameOrId,\n        conf.provider || conf.web3?.currentProvider,\n        conf.rpcUrl,\n        conf.registry || REGISTRY\n      )\n      this.did = this.controller.did\n    } else {\n      const net = network || chainNameOrId\n      let networkString = net ? `${net}:` : ''\n      if (networkString in ['mainnet:', '0x1:']) {\n        networkString = ''\n      }\n      this.did =\n        typeof publicKey === 'string' ? `did:ethr:${networkString}${publicKey}` : `did:ethr:${networkString}${address}`\n    }\n    this.address = address\n    if (conf.signer) {\n      this.signer = conf.signer\n      this.alg = conf.alg\n      if (!this.alg) {\n        console.warn(\n          'A JWT signer was specified but no algorithm was set. Please set the `alg` parameter when calling `new EthrDID()`'\n        )\n      }\n    } else if (conf.privateKey) {\n      this.signer = ES256KSigner(hexToBytes(conf.privateKey), true)\n      this.alg = 'ES256K-R'\n    }\n  }\n\n  static createKeyPair(chainNameOrId?: string | number): KeyPair {\n    const wallet = Wallet.createRandom()\n    const privateKey = wallet.privateKey\n    const address = computeAddress(privateKey)\n    const publicKey = computePublicKey(privateKey, true)\n    const net = typeof chainNameOrId === 'number' ? hexValue(chainNameOrId) : chainNameOrId\n    const identifier = net ? `did:ethr:${net}:${publicKey}` : publicKey\n    return { address, privateKey, publicKey, identifier }\n  }\n\n  async lookupOwner(cache = true): Promise<string> {\n    if (typeof this.controller === 'undefined') {\n      throw new Error('a web3 provider configuration is needed for network operations')\n    }\n    if (cache && this.owner) return this.owner\n    return this.controller?.getOwner(this.address)\n  }\n\n  async changeOwner(newOwner: string, txOptions?: CallOverrides): Promise<string> {\n    if (typeof this.controller === 'undefined') {\n      throw new Error('a web3 provider configuration is needed for network operations')\n    }\n    const owner = await this.lookupOwner()\n    const receipt = await this.controller.changeOwner(newOwner, {\n      ...txOptions,\n      from: owner,\n    })\n    this.owner = newOwner\n    return receipt.transactionHash\n  }\n\n  async createChangeOwnerHash(newOwner: string): Promise<string> {\n    if (typeof this.controller === 'undefined') {\n      throw new Error('a web3 provider configuration is needed for network operations')\n    }\n    return this.controller.createChangeOwnerHash(newOwner)\n  }\n\n  async changeOwnerSigned(newOwner: string, signature: MetaSignature, txOptions: CallOverrides): Promise<string> {\n    if (typeof this.controller === 'undefined') {\n      throw new Error('a web3 provider configuration is needed for network operations')\n    }\n    const receipt = await this.controller.changeOwnerSigned(newOwner, signature, txOptions)\n    this.owner = newOwner\n    return receipt.transactionHash\n  }\n\n  async addDelegate(\n    delegate: string,\n    delegateOptions?: DelegateOptions,\n    txOptions: CallOverrides = {}\n  ): Promise<string> {\n    if (typeof this.controller === 'undefined') {\n      throw new Error('a web3 provider configuration is needed for network operations')\n    }\n    const owner = await this.lookupOwner()\n    const receipt = await this.controller.addDelegate(\n      delegateOptions?.delegateType || DelegateTypes.veriKey,\n      delegate,\n      delegateOptions?.expiresIn || 86400,\n      { ...txOptions, from: owner }\n    )\n    return receipt.transactionHash\n  }\n\n  async createAddDelegateHash(delegateType: string, delegateAddress: string, exp: number): Promise<string> {\n    if (typeof this.controller === 'undefined') {\n      throw new Error('a web3 provider configuration is needed for network operations')\n    }\n    return this.controller.createAddDelegateHash(delegateType, delegateAddress, exp)\n  }\n\n  async addDelegateSigned(\n    delegate: string,\n    signature: MetaSignature,\n    delegateOptions?: DelegateOptions,\n    txOptions: CallOverrides = {}\n  ): Promise<string> {\n    if (typeof this.controller === 'undefined') {\n      throw new Error('a web3 provider configuration is needed for network operations')\n    }\n    const receipt = await this.controller.addDelegateSigned(\n      delegateOptions?.delegateType || DelegateTypes.veriKey,\n      delegate,\n      delegateOptions?.expiresIn || 86400,\n      signature,\n      txOptions\n    )\n    return receipt.transactionHash\n  }\n\n  async revokeDelegate(\n    delegate: string,\n    delegateType = DelegateTypes.veriKey,\n    txOptions: CallOverrides = {}\n  ): Promise<string> {\n    if (typeof this.controller === 'undefined') {\n      throw new Error('a web3 provider configuration is needed for network operations')\n    }\n    const owner = await this.lookupOwner()\n    const receipt = await this.controller.revokeDelegate(delegateType, delegate, { ...txOptions, from: owner })\n    return receipt.transactionHash\n  }\n\n  async createRevokeDelegateHash(delegateType: string, delegateAddress: string): Promise<string> {\n    if (typeof this.controller === 'undefined') {\n      throw new Error('a web3 provider configuration is needed for network operations')\n    }\n    return this.controller.createRevokeDelegateHash(delegateType, delegateAddress)\n  }\n\n  async revokeDelegateSigned(\n    delegate: string,\n    delegateType = DelegateTypes.veriKey,\n    signature: MetaSignature,\n    txOptions: CallOverrides = {}\n  ): Promise<string> {\n    if (typeof this.controller === 'undefined') {\n      throw new Error('a web3 provider configuration is needed for network operations')\n    }\n    const receipt = await this.controller.revokeDelegateSigned(delegateType, delegate, signature, txOptions)\n    return receipt.transactionHash\n  }\n\n  async setAttribute(\n    key: string,\n    value: string | Uint8Array,\n    expiresIn = 86400,\n    /** @deprecated please use `txOptions.gasLimit` */\n    gasLimit?: number,\n    txOptions: CallOverrides = {}\n  ): Promise<string> {\n    if (typeof this.controller === 'undefined') {\n      throw new Error('a web3 provider configuration is needed for network operations')\n    }\n    const owner = await this.lookupOwner()\n    const receipt = await this.controller.setAttribute(key, attributeToHex(key, value), expiresIn, {\n      gasLimit,\n      ...txOptions,\n      from: owner,\n    })\n    return receipt.transactionHash\n  }\n\n  async createSetAttributeHash(attrName: string, attrValue: string, exp: number) {\n    if (typeof this.controller === 'undefined') {\n      throw new Error('a web3 provider configuration is needed for network operations')\n    }\n    return this.controller.createSetAttributeHash(attrName, attrValue, exp)\n  }\n\n  async setAttributeSigned(\n    key: string,\n    value: string | Uint8Array,\n    expiresIn = 86400,\n    signature: MetaSignature,\n    txOptions: CallOverrides = {}\n  ): Promise<string> {\n    if (typeof this.controller === 'undefined') {\n      throw new Error('a web3 provider configuration is needed for network operations')\n    }\n    const receipt = await this.controller.setAttributeSigned(\n      key,\n      attributeToHex(key, value),\n      expiresIn,\n      signature,\n      txOptions\n    )\n    return receipt.transactionHash\n  }\n\n  async revokeAttribute(\n    key: string,\n    value: string | Uint8Array,\n    /** @deprecated please use `txOptions.gasLimit` */\n    gasLimit?: number,\n    txOptions: CallOverrides = {}\n  ): Promise<string> {\n    if (typeof this.controller === 'undefined') {\n      throw new Error('a web3 provider configuration is needed for network operations')\n    }\n    const owner = await this.lookupOwner()\n    const receipt = await this.controller.revokeAttribute(key, attributeToHex(key, value), {\n      gasLimit,\n      ...txOptions,\n      from: owner,\n    })\n    return receipt.transactionHash\n  }\n\n  async createRevokeAttributeHash(attrName: string, attrValue: string) {\n    if (typeof this.controller === 'undefined') {\n      throw new Error('a web3 provider configuration is needed for network operations')\n    }\n    return this.controller.createRevokeAttributeHash(attrName, attrValue)\n  }\n\n  async revokeAttributeSigned(\n    key: string,\n    value: string | Uint8Array,\n    signature: MetaSignature,\n    txOptions: CallOverrides = {}\n  ): Promise<string> {\n    if (typeof this.controller === 'undefined') {\n      throw new Error('a web3 provider configuration is needed for network operations')\n    }\n    const receipt = await this.controller.revokeAttributeSigned(key, attributeToHex(key, value), signature, txOptions)\n    return receipt.transactionHash\n  }\n\n  // Create a temporary signing delegate able to sign JWT on behalf of identity\n  async createSigningDelegate(\n    delegateType = DelegateTypes.veriKey,\n    expiresIn = 86400,\n    pufHsmRemoteUrl: string\n  ): Promise<{address:string; pubkey:string; txHash: string }> {\n\n    let address:string, pubkey:string\n\n    if (typeof pufHsmRemoteUrl === 'string') {\n      const response = await fetch(`${pufHsmRemoteUrl}pufs_get_p256_pubkey_js`)\n      if (!response.ok) {\n        throw new Error(`createSigningDelegate HTTP error! status: ${response.status}`);\n      }\n      const jsonString: string = await response.text()\n      pubkey = JSON.parse(jsonString).pubkey; \n      address = toEthereumAddress(pubkey);\n     } else {\n      const kp: KeyPair = EthrDID.createKeyPair()\n      address = kp.address;\n      pubkey = kp.publicKey\n      this.signer = ES256KSigner(hexToBytes(kp.privateKey), true)\n\n    }\n    const txHash = await this.addDelegate(address, {\n      delegateType,\n      expiresIn,\n    })\n    return { address, pubkey , txHash }\n\n  }\n\n  // eslint-disable-next-line\n  async signJWT(payload: any, expiresIn?: number, pufHsmRemoteUrl?:string): Promise<string> {\n    \n    if (typeof pufHsmRemoteUrl === 'string') {\n      this.signer = ES256HSMSigner(pufHsmRemoteUrl)\n    }\n    if (typeof this.signer !== 'function') {\n      throw new Error('No signer configured')\n    }\n    const options = {\n      signer: this.signer,\n      alg: 'ES256',\n      issuer: this.did,\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    if (expiresIn) (<any>options)['expiresIn'] = expiresIn\n    return createJWT(payload, options)\n  }\n\n  async verifyJWT(jwt: string, resolver: Resolvable, audience = this.did): Promise<JWTVerified> {\n    return verifyJWT(jwt, { resolver, audience })\n  }\n}\n\nfunction attributeToHex(key: string, value: string | Uint8Array): string {\n  if (value instanceof Uint8Array || isBytes(value)) {\n    return hexlify(value)\n  }\n  const matchKeyWithEncoding = key.match(/^did\\/(pub|auth|svc)\\/(\\w+)(\\/(\\w+))?(\\/(\\w+))?$/)\n  const encoding = matchKeyWithEncoding?.[6]\n  const matchHexString = (<string>value).match(/^0x[0-9a-fA-F]*$/)\n  if (encoding && !matchHexString) {\n    if (encoding === 'base64') {\n      return hexlify(base64.decode(value))\n    }\n    if (encoding === 'base58') {\n      return hexlify(Base58.decode(value))\n    }\n  } else if (matchHexString) {\n    return <string>value\n  }\n\n  return hexlify(toUtf8Bytes(value))\n}"],"names":["DelegateTypes","EthrDID","constructor","conf","did","address","signer","alg","owner","controller","publicKey","network","interpretIdentifier","identifier","chainNameOrId","hexValue","provider","rpcUrl","web3","txSigner","privateKey","Wallet","EthrDidController","undefined","currentProvider","registry","REGISTRY","net","networkString","console","warn","ES256KSigner","hexToBytes","createKeyPair","wallet","createRandom","computeAddress","computePublicKey","lookupOwner","cache","_this","Error","Promise","resolve","getOwner","e","reject","changeOwner","newOwner","txOptions","_this2","then","from","receipt","transactionHash","createChangeOwnerHash","_this3","changeOwnerSigned","signature","_this4","addDelegate","delegate","delegateOptions","_this5","delegateType","veriKey","expiresIn","createAddDelegateHash","delegateAddress","exp","_this6","addDelegateSigned","_this7","revokeDelegate","_this8","createRevokeDelegateHash","_this9","revokeDelegateSigned","_this10","setAttribute","key","value","gasLimit","_this11","attributeToHex","createSetAttributeHash","attrName","attrValue","_this12","setAttributeSigned","_this13","revokeAttribute","_this14","createRevokeAttributeHash","_this15","revokeAttributeSigned","_this16","createSigningDelegate","pufHsmRemoteUrl","_exit","_this17","_temp2","_result","txHash","pubkey","_temp","fetch","response","ok","status","text","jsonString","JSON","parse","toEthereumAddress","kp","signJWT","payload","_this18","ES256HSMSigner","options","issuer","createJWT","verifyJWT","jwt","resolver","audience","_this19","Uint8Array","isBytes","hexlify","matchKeyWithEncoding","match","encoding","matchHexString","base64","decode","Base58","toUtf8Bytes"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAcYA,iCAIX;EAJD,CAAA,UAAYA,aAAa,EAAA;EACvBA,EAAAA,aAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;EACnBA,EAAAA,aAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;EACnBA,EAAAA,aAAA,CAAA,KAAA,CAAA,GAAA,KAAW,CAAA;EACb,CAAC,EAJWA,qBAAa,KAAbA,qBAAa,GAIxB,EAAA,CAAA,CAAA,CAAA;QA+BYC,OAAO,CAAA;IAQlBC,WAAAA,CAAYC,IAAa,EAAA;EAAA,IAAA,IAAA,CAPlBC,GAAG,GAAA,KAAA,CAAA,CAAA;EAAA,IAAA,IAAA,CACHC,OAAO,GAAA,KAAA,CAAA,CAAA;EAAA,IAAA,IAAA,CACPC,MAAM,GAAA,KAAA,CAAA,CAAA;EAAA,IAAA,IAAA,CACNC,GAAG,GAAA,KAAA,CAAA,CAAA;EAAA,IAAA,IAAA,CACFC,KAAK,GAAA,KAAA,CAAA,CAAA;EAAA,IAAA,IAAA,CACLC,UAAU,GAAA,KAAA,CAAA,CAAA;MAGhB,MAAM;QAAEJ,OAAO;QAAEK,SAAS;EAAEC,MAAAA,OAAAA;EAAO,KAAE,GAAGC,mCAAmB,CAACT,IAAI,CAACU,UAAU,CAAC,CAAA;EAC5E,IAAA,MAAMC,aAAa,GAAG,OAAOX,IAAI,CAACW,aAAa,KAAK,QAAQ,GAAGC,cAAQ,CAACZ,IAAI,CAACW,aAAa,CAAC,GAAGX,IAAI,CAACW,aAAa,CAAA;MAChH,IAAIX,IAAI,CAACa,QAAQ,IAAIb,IAAI,CAACc,MAAM,IAAId,IAAI,CAACe,IAAI,EAAE;EAC7C,MAAA,IAAIC,QAAQ,GAAGhB,IAAI,CAACgB,QAAQ,CAAA;QAC5B,IAAIhB,IAAI,CAACiB,UAAU,IAAI,OAAOD,QAAQ,KAAK,WAAW,EAAE;EACtDA,QAAAA,QAAQ,GAAG,IAAIE,aAAM,CAAClB,IAAI,CAACiB,UAAU,CAAC,CAAA;EACvC,OAAA;EACD,MAAA,IAAI,CAACX,UAAU,GAAG,IAAIa,iCAAiB,CACrCnB,IAAI,CAACU,UAAU,EACfU,SAAS,EACTJ,QAAQ,EACRL,aAAa,EACbX,IAAI,CAACa,QAAQ,IAAIb,IAAI,CAACe,IAAI,EAAEM,eAAe,EAC3CrB,IAAI,CAACc,MAAM,EACXd,IAAI,CAACsB,QAAQ,IAAIC,wBAAQ,CAC1B,CAAA;EACD,MAAA,IAAI,CAACtB,GAAG,GAAG,IAAI,CAACK,UAAU,CAACL,GAAG,CAAA;EAC/B,KAAA,MAAM;EACL,MAAA,MAAMuB,GAAG,GAAGhB,OAAO,IAAIG,aAAa,CAAA;QACpC,IAAIc,aAAa,GAAGD,GAAG,GAAG,GAAGA,GAAG,CAAA,CAAA,CAAG,GAAG,EAAE,CAAA;EACxC,MAAA,IAAIC,aAAa,IAAI,CAAC,UAAU,EAAE,MAAM,CAAC,EAAE;EACzCA,QAAAA,aAAa,GAAG,EAAE,CAAA;EACnB,OAAA;EACD,MAAA,IAAI,CAACxB,GAAG,GACN,OAAOM,SAAS,KAAK,QAAQ,GAAG,CAAA,SAAA,EAAYkB,aAAa,CAAA,EAAGlB,SAAS,CAAE,CAAA,GAAG,YAAYkB,aAAa,CAAA,EAAGvB,OAAO,CAAE,CAAA,CAAA;EAClH,KAAA;MACD,IAAI,CAACA,OAAO,GAAGA,OAAO,CAAA;MACtB,IAAIF,IAAI,CAACG,MAAM,EAAE;EACf,MAAA,IAAI,CAACA,MAAM,GAAGH,IAAI,CAACG,MAAM,CAAA;EACzB,MAAA,IAAI,CAACC,GAAG,GAAGJ,IAAI,CAACI,GAAG,CAAA;EACnB,MAAA,IAAI,CAAC,IAAI,CAACA,GAAG,EAAE;EACbsB,QAAAA,OAAO,CAACC,IAAI,CACV,kHAAkH,CACnH,CAAA;EACF,OAAA;EACF,KAAA,MAAM,IAAI3B,IAAI,CAACiB,UAAU,EAAE;EAC1B,MAAA,IAAI,CAACd,MAAM,GAAGyB,mBAAY,CAACC,iBAAU,CAAC7B,IAAI,CAACiB,UAAU,CAAC,EAAE,IAAI,CAAC,CAAA;QAC7D,IAAI,CAACb,GAAG,GAAG,UAAU,CAAA;EACtB,KAAA;EACH,GAAA;IAEA,OAAO0B,aAAaA,CAACnB,aAA+B,EAAA;EAClD,IAAA,MAAMoB,QAAM,GAAGb,aAAM,CAACc,YAAY,EAAE,CAAA;EACpC,IAAA,MAAMf,UAAU,GAAGc,QAAM,CAACd,UAAU,CAAA;EACpC,IAAA,MAAMf,OAAO,GAAG+B,2BAAc,CAAChB,UAAU,CAAC,CAAA;EAC1C,IAAA,MAAMV,SAAS,GAAG2B,2BAAgB,CAACjB,UAAU,EAAE,IAAI,CAAC,CAAA;EACpD,IAAA,MAAMO,GAAG,GAAG,OAAOb,aAAa,KAAK,QAAQ,GAAGC,cAAQ,CAACD,aAAa,CAAC,GAAGA,aAAa,CAAA;MACvF,MAAMD,UAAU,GAAGc,GAAG,GAAG,CAAA,SAAA,EAAYA,GAAG,CAAIjB,CAAAA,EAAAA,SAAS,CAAE,CAAA,GAAGA,SAAS,CAAA;MACnE,OAAO;QAAEL,OAAO;QAAEe,UAAU;QAAEV,SAAS;EAAEG,MAAAA,UAAAA;OAAY,CAAA;EACvD,GAAA;IAEMyB,WAAWA,CAACC,KAAK,GAAG,IAAI,EAAA;MAAA,IAAA;QAAA,MAAAC,KAAA,GACjB,IAAI,CAAA;EAAf,MAAA,IAAI,OAAOA,KAAA,CAAK/B,UAAU,KAAK,WAAW,EAAE;EAC1C,QAAA,MAAM,IAAIgC,KAAK,CAAC,gEAAgE,CAAC,CAAA;EAClF,OAAA;EACD,MAAA,IAAIF,KAAK,IAAIC,KAAA,CAAKhC,KAAK,EAAE,OAAAkC,OAAA,CAAAC,OAAA,CAAOH,KAAA,CAAKhC,KAAK,CAAA,CAAA;EAC1C,MAAA,OAAAkC,OAAA,CAAAC,OAAA,CAAOH,KAAA,CAAK/B,UAAU,EAAEmC,QAAQ,CAACJ,KAAA,CAAKnC,OAAO,CAAC,CAAA,CAAA;EAChD,KAAC,QAAAwC,CAAA,EAAA;EAAA,MAAA,OAAAH,OAAA,CAAAI,MAAA,CAAAD,CAAA,CAAA,CAAA;EAAA,KAAA;EAAA,GAAA;IAEKE,WAAWA,CAACC,QAAgB,EAAEC,SAAyB,EAAA;MAAA,IAAA;QAAA,MAAAC,MAAA,GAChD,IAAI,CAAA;EAAf,MAAA,IAAI,OAAOA,MAAA,CAAKzC,UAAU,KAAK,WAAW,EAAE;EAC1C,QAAA,MAAM,IAAIgC,KAAK,CAAC,gEAAgE,CAAC,CAAA;EAClF,OAAA;EAAA,MAAA,OAAAC,OAAA,CAAAC,OAAA,CACmBO,MAAA,CAAKZ,WAAW,EAAE,CAAA,CAAAa,IAAA,CAAA,UAAhC3C,KAAK,EAAA;UAAA,OAAAkC,OAAA,CAAAC,OAAA,CACWO,MAAA,CAAKzC,UAAU,CAACsC,WAAW,CAACC,QAAQ,EAAE;EAC1D,UAAA,GAAGC,SAAS;EACZG,UAAAA,IAAI,EAAE5C,KAAAA;EACP,SAAA,CAAC,CAAA,CAAA2C,IAAA,CAAA,UAHIE,OAAO,EAAA;YAIbH,MAAA,CAAK1C,KAAK,GAAGwC,QAAQ,CAAA;YACrB,OAAOK,OAAO,CAACC,eAAe,CAAA;EAAA,SAAA,CAAA,CAAA;EAAA,OAAA,CAAA,CAAA;EAChC,KAAC,QAAAT,CAAA,EAAA;EAAA,MAAA,OAAAH,OAAA,CAAAI,MAAA,CAAAD,CAAA,CAAA,CAAA;EAAA,KAAA;EAAA,GAAA;EAEKU,EAAAA,qBAAqBA,CAACP,QAAgB,EAAA;MAAA,IAAA;QAAA,MAAAQ,MAAA,GAC/B,IAAI,CAAA;EAAf,MAAA,IAAI,OAAOA,MAAA,CAAK/C,UAAU,KAAK,WAAW,EAAE;EAC1C,QAAA,MAAM,IAAIgC,KAAK,CAAC,gEAAgE,CAAC,CAAA;EAClF,OAAA;QACD,OAAAC,OAAA,CAAAC,OAAA,CAAOa,MAAA,CAAK/C,UAAU,CAAC8C,qBAAqB,CAACP,QAAQ,CAAC,CAAA,CAAA;EACxD,KAAC,QAAAH,CAAA,EAAA;EAAA,MAAA,OAAAH,OAAA,CAAAI,MAAA,CAAAD,CAAA,CAAA,CAAA;EAAA,KAAA;EAAA,GAAA;EAEKY,EAAAA,iBAAiBA,CAACT,QAAgB,EAAEU,SAAwB,EAAET,SAAwB,EAAA;MAAA,IAAA;QAAA,MAAAU,MAAA,GAC/E,IAAI,CAAA;EAAf,MAAA,IAAI,OAAOA,MAAA,CAAKlD,UAAU,KAAK,WAAW,EAAE;EAC1C,QAAA,MAAM,IAAIgC,KAAK,CAAC,gEAAgE,CAAC,CAAA;EAClF,OAAA;EAAA,MAAA,OAAAC,OAAA,CAAAC,OAAA,CACqBgB,MAAA,CAAKlD,UAAU,CAACgD,iBAAiB,CAACT,QAAQ,EAAEU,SAAS,EAAET,SAAS,CAAC,CAAAE,CAAAA,IAAA,WAAjFE,OAAO,EAAA;UACbM,MAAA,CAAKnD,KAAK,GAAGwC,QAAQ,CAAA;UACrB,OAAOK,OAAO,CAACC,eAAe,CAAA;EAAA,OAAA,CAAA,CAAA;EAChC,KAAC,QAAAT,CAAA,EAAA;EAAA,MAAA,OAAAH,OAAA,CAAAI,MAAA,CAAAD,CAAA,CAAA,CAAA;EAAA,KAAA;EAAA,GAAA;IAEKe,WAAWA,CACfC,QAAgB,EAChBC,eAAiC,EACjCb,YAA2B,EAAE,EAAA;MAAA,IAAA;QAAA,MAAAc,MAAA,GAElB,IAAI,CAAA;EAAf,MAAA,IAAI,OAAOA,MAAA,CAAKtD,UAAU,KAAK,WAAW,EAAE;EAC1C,QAAA,MAAM,IAAIgC,KAAK,CAAC,gEAAgE,CAAC,CAAA;EAClF,OAAA;EAAA,MAAA,OAAAC,OAAA,CAAAC,OAAA,CACmBoB,MAAA,CAAKzB,WAAW,EAAE,CAAA,CAAAa,IAAA,CAAA,UAAhC3C,KAAK,EAAA;UAAA,OAAAkC,OAAA,CAAAC,OAAA,CACWoB,MAAA,CAAKtD,UAAU,CAACmD,WAAW,CAC/CE,eAAe,EAAEE,YAAY,IAAIhE,qBAAa,CAACiE,OAAO,EACtDJ,QAAQ,EACRC,eAAe,EAAEI,SAAS,IAAI,KAAK,EACnC;EAAE,UAAA,GAAGjB,SAAS;EAAEG,UAAAA,IAAI,EAAE5C,KAAAA;EAAK,SAAE,CAC9B,CAAA,CAAA2C,IAAA,CAAA,UALKE,OAAO,EAAA;YAMb,OAAOA,OAAO,CAACC,eAAe,CAAA;EAAA,SAAA,CAAA,CAAA;EAAA,OAAA,CAAA,CAAA;EAChC,KAAC,QAAAT,CAAA,EAAA;EAAA,MAAA,OAAAH,OAAA,CAAAI,MAAA,CAAAD,CAAA,CAAA,CAAA;EAAA,KAAA;EAAA,GAAA;EAEKsB,EAAAA,qBAAqBA,CAACH,YAAoB,EAAEI,eAAuB,EAAEC,GAAW,EAAA;MAAA,IAAA;QAAA,MAAAC,MAAA,GACzE,IAAI,CAAA;EAAf,MAAA,IAAI,OAAOA,MAAA,CAAK7D,UAAU,KAAK,WAAW,EAAE;EAC1C,QAAA,MAAM,IAAIgC,KAAK,CAAC,gEAAgE,CAAC,CAAA;EAClF,OAAA;EACD,MAAA,OAAAC,OAAA,CAAAC,OAAA,CAAO2B,MAAA,CAAK7D,UAAU,CAAC0D,qBAAqB,CAACH,YAAY,EAAEI,eAAe,EAAEC,GAAG,CAAC,CAAA,CAAA;EAClF,KAAC,QAAAxB,CAAA,EAAA;EAAA,MAAA,OAAAH,OAAA,CAAAI,MAAA,CAAAD,CAAA,CAAA,CAAA;EAAA,KAAA;EAAA,GAAA;IAEK0B,iBAAiBA,CACrBV,QAAgB,EAChBH,SAAwB,EACxBI,eAAiC,EACjCb,SAAA,GAA2B,EAAE,EAAA;MAAA,IAAA;QAAA,MAAAuB,MAAA,GAElB,IAAI,CAAA;EAAf,MAAA,IAAI,OAAOA,MAAA,CAAK/D,UAAU,KAAK,WAAW,EAAE;EAC1C,QAAA,MAAM,IAAIgC,KAAK,CAAC,gEAAgE,CAAC,CAAA;EAClF,OAAA;EAAA,MAAA,OAAAC,OAAA,CAAAC,OAAA,CACqB6B,MAAA,CAAK/D,UAAU,CAAC8D,iBAAiB,CACrDT,eAAe,EAAEE,YAAY,IAAIhE,qBAAa,CAACiE,OAAO,EACtDJ,QAAQ,EACRC,eAAe,EAAEI,SAAS,IAAI,KAAK,EACnCR,SAAS,EACTT,SAAS,CACV,CAAAE,CAAAA,IAAA,WANKE,OAAO,EAAA;UAOb,OAAOA,OAAO,CAACC,eAAe,CAAA;EAAA,OAAA,CAAA,CAAA;EAChC,KAAC,QAAAT,CAAA,EAAA;EAAA,MAAA,OAAAH,OAAA,CAAAI,MAAA,CAAAD,CAAA,CAAA,CAAA;EAAA,KAAA;EAAA,GAAA;IAEK4B,cAAcA,CAClBZ,QAAgB,EAChBG,YAAY,EACZf,SAAA,GAA2B,EAAE,EAAA;MAAA,IAAA;QAAA,MAAAyB,MAAA,GAElB,IAAI,CAAA;QAAA,IAHfV,YAAY,KAAAzC,SAAA,EAAZyC,YAAY,GAAGhE,qBAAa,CAACiE,OAAO,CAAA;EAGpC,MAAA,IAAI,OAAOS,MAAA,CAAKjE,UAAU,KAAK,WAAW,EAAE;EAC1C,QAAA,MAAM,IAAIgC,KAAK,CAAC,gEAAgE,CAAC,CAAA;EAClF,OAAA;EAAA,MAAA,OAAAC,OAAA,CAAAC,OAAA,CACmB+B,MAAA,CAAKpC,WAAW,EAAE,CAAA,CAAAa,IAAA,CAAA,UAAhC3C,KAAK,EAAA;EAAA,QAAA,OAAAkC,OAAA,CAAAC,OAAA,CACW+B,MAAA,CAAKjE,UAAU,CAACgE,cAAc,CAACT,YAAY,EAAEH,QAAQ,EAAE;EAAE,UAAA,GAAGZ,SAAS;EAAEG,UAAAA,IAAI,EAAE5C,KAAAA;EAAO,SAAA,CAAC,CAAA,CAAA2C,IAAA,CAAA,UAArGE,OAAO,EAAA;YACb,OAAOA,OAAO,CAACC,eAAe,CAAA;EAAA,SAAA,CAAA,CAAA;EAAA,OAAA,CAAA,CAAA;EAChC,KAAC,QAAAT,CAAA,EAAA;EAAA,MAAA,OAAAH,OAAA,CAAAI,MAAA,CAAAD,CAAA,CAAA,CAAA;EAAA,KAAA;EAAA,GAAA;IAEK8B,wBAAwBA,CAACX,YAAoB,EAAEI,eAAuB,EAAA;MAAA,IAAA;QAAA,MAAAQ,MAAA,GAC/D,IAAI,CAAA;EAAf,MAAA,IAAI,OAAOA,MAAA,CAAKnE,UAAU,KAAK,WAAW,EAAE;EAC1C,QAAA,MAAM,IAAIgC,KAAK,CAAC,gEAAgE,CAAC,CAAA;EAClF,OAAA;EACD,MAAA,OAAAC,OAAA,CAAAC,OAAA,CAAOiC,MAAA,CAAKnE,UAAU,CAACkE,wBAAwB,CAACX,YAAY,EAAEI,eAAe,CAAC,CAAA,CAAA;EAChF,KAAC,QAAAvB,CAAA,EAAA;EAAA,MAAA,OAAAH,OAAA,CAAAI,MAAA,CAAAD,CAAA,CAAA,CAAA;EAAA,KAAA;EAAA,GAAA;IAEKgC,oBAAoBA,CACxBhB,QAAgB,EAChBG,YAAY,EACZN,SAAwB,EACxBT,YAA2B,EAAE,EAAA;MAAA,IAAA;QAAA,MAAA6B,OAAA,GAElB,IAAI,CAAA;QAAA,IAJfd,YAAY,KAAAzC,SAAA,EAAZyC,YAAY,GAAGhE,qBAAa,CAACiE,OAAO,CAAA;EAIpC,MAAA,IAAI,OAAOa,OAAA,CAAKrE,UAAU,KAAK,WAAW,EAAE;EAC1C,QAAA,MAAM,IAAIgC,KAAK,CAAC,gEAAgE,CAAC,CAAA;EAClF,OAAA;QAAA,OAAAC,OAAA,CAAAC,OAAA,CACqBmC,OAAA,CAAKrE,UAAU,CAACoE,oBAAoB,CAACb,YAAY,EAAEH,QAAQ,EAAEH,SAAS,EAAET,SAAS,CAAC,CAAA,CAAAE,IAAA,CAAA,UAAlGE,OAAO,EAAA;UACb,OAAOA,OAAO,CAACC,eAAe,CAAA;EAAA,OAAA,CAAA,CAAA;EAChC,KAAC,QAAAT,CAAA,EAAA;EAAA,MAAA,OAAAH,OAAA,CAAAI,MAAA,CAAAD,CAAA,CAAA,CAAA;EAAA,KAAA;EAAA,GAAA;IAEKkC,YAAYA,CAChBC,GAAW,EACXC,KAA0B,EAC1Bf,SAAS,GAAG,KAAK;EAEjBgB,EAAAA,QAAiB,EACjBjC,YAA2B,EAAE,EAAA;MAAA,IAAA;QAAA,MAAAkC,OAAA,GAElB,IAAI,CAAA;EAAf,MAAA,IAAI,OAAOA,OAAA,CAAK1E,UAAU,KAAK,WAAW,EAAE;EAC1C,QAAA,MAAM,IAAIgC,KAAK,CAAC,gEAAgE,CAAC,CAAA;EAClF,OAAA;EAAA,MAAA,OAAAC,OAAA,CAAAC,OAAA,CACmBwC,OAAA,CAAK7C,WAAW,EAAE,CAAA,CAAAa,IAAA,CAAA,UAAhC3C,KAAK,EAAA;UAAA,OAAAkC,OAAA,CAAAC,OAAA,CACWwC,OAAA,CAAK1E,UAAU,CAACsE,YAAY,CAACC,GAAG,EAAEI,cAAc,CAACJ,GAAG,EAAEC,KAAK,CAAC,EAAEf,SAAS,EAAE;YAC7FgB,QAAQ;EACR,UAAA,GAAGjC,SAAS;EACZG,UAAAA,IAAI,EAAE5C,KAAAA;EACP,SAAA,CAAC,CAAA,CAAA2C,IAAA,CAAA,UAJIE,OAAO,EAAA;YAKb,OAAOA,OAAO,CAACC,eAAe,CAAA;EAAA,SAAA,CAAA,CAAA;EAAA,OAAA,CAAA,CAAA;EAChC,KAAC,QAAAT,CAAA,EAAA;EAAA,MAAA,OAAAH,OAAA,CAAAI,MAAA,CAAAD,CAAA,CAAA,CAAA;EAAA,KAAA;EAAA,GAAA;EAEKwC,EAAAA,sBAAsBA,CAACC,QAAgB,EAAEC,SAAiB,EAAElB,GAAW,EAAA;MAAA,IAAA;QAAA,MAAAmB,OAAA,GAChE,IAAI,CAAA;EAAf,MAAA,IAAI,OAAOA,OAAA,CAAK/E,UAAU,KAAK,WAAW,EAAE;EAC1C,QAAA,MAAM,IAAIgC,KAAK,CAAC,gEAAgE,CAAC,CAAA;EAClF,OAAA;EACD,MAAA,OAAAC,OAAA,CAAAC,OAAA,CAAO6C,OAAA,CAAK/E,UAAU,CAAC4E,sBAAsB,CAACC,QAAQ,EAAEC,SAAS,EAAElB,GAAG,CAAC,CAAA,CAAA;EACzE,KAAC,QAAAxB,CAAA,EAAA;EAAA,MAAA,OAAAH,OAAA,CAAAI,MAAA,CAAAD,CAAA,CAAA,CAAA;EAAA,KAAA;EAAA,GAAA;EAEK4C,EAAAA,kBAAkBA,CACtBT,GAAW,EACXC,KAA0B,EAC1Bf,SAAS,GAAG,KAAK,EACjBR,SAAwB,EACxBT,YAA2B,EAAE,EAAA;MAAA,IAAA;QAAA,MAAAyC,OAAA,GAElB,IAAI,CAAA;EAAf,MAAA,IAAI,OAAOA,OAAA,CAAKjF,UAAU,KAAK,WAAW,EAAE;EAC1C,QAAA,MAAM,IAAIgC,KAAK,CAAC,gEAAgE,CAAC,CAAA;EAClF,OAAA;EAAA,MAAA,OAAAC,OAAA,CAAAC,OAAA,CACqB+C,OAAA,CAAKjF,UAAU,CAACgF,kBAAkB,CACtDT,GAAG,EACHI,cAAc,CAACJ,GAAG,EAAEC,KAAK,CAAC,EAC1Bf,SAAS,EACTR,SAAS,EACTT,SAAS,CACV,CAAA,CAAAE,IAAA,CAAA,UANKE,OAAO,EAAA;UAOb,OAAOA,OAAO,CAACC,eAAe,CAAA;EAAA,OAAA,CAAA,CAAA;EAChC,KAAC,QAAAT,CAAA,EAAA;EAAA,MAAA,OAAAH,OAAA,CAAAI,MAAA,CAAAD,CAAA,CAAA,CAAA;EAAA,KAAA;EAAA,GAAA;EAEK8C,EAAAA,eAAeA,CACnBX,GAAW,EACXC,KAA0B;EAE1BC,EAAAA,QAAiB,EACjBjC,YAA2B,EAAE,EAAA;MAAA,IAAA;QAAA,MAAA2C,OAAA,GAElB,IAAI,CAAA;EAAf,MAAA,IAAI,OAAOA,OAAA,CAAKnF,UAAU,KAAK,WAAW,EAAE;EAC1C,QAAA,MAAM,IAAIgC,KAAK,CAAC,gEAAgE,CAAC,CAAA;EAClF,OAAA;EAAA,MAAA,OAAAC,OAAA,CAAAC,OAAA,CACmBiD,OAAA,CAAKtD,WAAW,EAAE,CAAA,CAAAa,IAAA,CAAA,UAAhC3C,KAAK,EAAA;EAAA,QAAA,OAAAkC,OAAA,CAAAC,OAAA,CACWiD,OAAA,CAAKnF,UAAU,CAACkF,eAAe,CAACX,GAAG,EAAEI,cAAc,CAACJ,GAAG,EAAEC,KAAK,CAAC,EAAE;YACrFC,QAAQ;EACR,UAAA,GAAGjC,SAAS;EACZG,UAAAA,IAAI,EAAE5C,KAAAA;EACP,SAAA,CAAC,CAAA,CAAA2C,IAAA,CAAA,UAJIE,OAAO,EAAA;YAKb,OAAOA,OAAO,CAACC,eAAe,CAAA;EAAA,SAAA,CAAA,CAAA;EAAA,OAAA,CAAA,CAAA;EAChC,KAAC,QAAAT,CAAA,EAAA;EAAA,MAAA,OAAAH,OAAA,CAAAI,MAAA,CAAAD,CAAA,CAAA,CAAA;EAAA,KAAA;EAAA,GAAA;IAEKgD,yBAAyBA,CAACP,QAAgB,EAAEC,SAAiB,EAAA;MAAA,IAAA;QAAA,MAAAO,OAAA,GACtD,IAAI,CAAA;EAAf,MAAA,IAAI,OAAOA,OAAA,CAAKrF,UAAU,KAAK,WAAW,EAAE;EAC1C,QAAA,MAAM,IAAIgC,KAAK,CAAC,gEAAgE,CAAC,CAAA;EAClF,OAAA;EACD,MAAA,OAAAC,OAAA,CAAAC,OAAA,CAAOmD,OAAA,CAAKrF,UAAU,CAACoF,yBAAyB,CAACP,QAAQ,EAAEC,SAAS,CAAC,CAAA,CAAA;EACvE,KAAC,QAAA1C,CAAA,EAAA;EAAA,MAAA,OAAAH,OAAA,CAAAI,MAAA,CAAAD,CAAA,CAAA,CAAA;EAAA,KAAA;EAAA,GAAA;IAEKkD,qBAAqBA,CACzBf,GAAW,EACXC,KAA0B,EAC1BvB,SAAwB,EACxBT,SAAA,GAA2B,EAAE,EAAA;MAAA,IAAA;QAAA,MAAA+C,OAAA,GAElB,IAAI,CAAA;EAAf,MAAA,IAAI,OAAOA,OAAA,CAAKvF,UAAU,KAAK,WAAW,EAAE;EAC1C,QAAA,MAAM,IAAIgC,KAAK,CAAC,gEAAgE,CAAC,CAAA;EAClF,OAAA;QAAA,OAAAC,OAAA,CAAAC,OAAA,CACqBqD,OAAA,CAAKvF,UAAU,CAACsF,qBAAqB,CAACf,GAAG,EAAEI,cAAc,CAACJ,GAAG,EAAEC,KAAK,CAAC,EAAEvB,SAAS,EAAET,SAAS,CAAC,CAAA,CAAAE,IAAA,CAAA,UAA5GE,OAAO,EAAA;UACb,OAAOA,OAAO,CAACC,eAAe,CAAA;EAAA,OAAA,CAAA,CAAA;EAChC,KAAC,QAAAT,CAAA,EAAA;EAAA,MAAA,OAAAH,OAAA,CAAAI,MAAA,CAAAD,CAAA,CAAA,CAAA;EAAA,KAAA;KAED;EACMoD,EAAAA,qBAAqBA,CACzBjC,YAAY,EACZE,SAAS,GAAG,KAAK,EACjBgC,eAAuB,EAAA;MAAA,IAAA;EAAA,MAAA,IAAAC,KAAA,CAAA;QAAA,MAAAC,OAAA,GAiBrB,IAAI,CAAA;EAAA,MAAA,SAAAC,OAAAC,OAAA,EAAA;EAAA,QAAA,OAAAH,KAAA,GAAAG,OAAA,GAAA5D,OAAA,CAAAC,OAAA,CAGeyD,OAAA,CAAKxC,WAAW,CAACvD,OAAO,EAAE;YAC7C2D,YAAY;EACZE,UAAAA,SAAAA;EACD,SAAA,CAAC,CAAA,CAAAf,IAAA,CAAA,UAHIoD,MAAM,EAAA;YAIZ,OAAO;cAAElG,OAAO;cAAEmG,MAAM;EAAGD,YAAAA,MAAAA;aAAQ,CAAA;EAAA,SAAA,CAAA,CAAA;EAAA,OAAA;QAAA,IA1BnCvC,YAAY,KAAAzC,SAAA,EAAZyC,YAAY,GAAGhE,qBAAa,CAACiE,OAAO,CAAA;QAKpC,IAAI5D,OAAc,EAAEmG,MAAa,CAAA;EAAA,MAAA,MAAAC,KAAA,GAAA,YAAA;UAAA,IAE7B,OAAOP,eAAe,KAAK,QAAQ,EAAA;EAAA,UAAA,OAAAxD,OAAA,CAAAC,OAAA,CACd+D,KAAK,CAAC,CAAGR,EAAAA,eAAe,CAAyB,uBAAA,CAAA,CAAC,CAAA/C,CAAAA,IAAA,WAAnEwD,QAAQ,EAAA;EACd,YAAA,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;gBAChB,MAAM,IAAInE,KAAK,CAAC,CAAA,0CAAA,EAA6CkE,QAAQ,CAACE,MAAM,EAAE,CAAC,CAAA;EAChF,aAAA;EAAA,YAAA,OAAAnE,OAAA,CAAAC,OAAA,CACgCgE,QAAQ,CAACG,IAAI,EAAE,CAAA,CAAA3D,IAAA,CAAA,UAA1C4D,UAAU,EAAA;gBAChBP,MAAM,GAAGQ,IAAI,CAACC,KAAK,CAACF,UAAU,CAAC,CAACP,MAAM,CAAA;EACtCnG,cAAAA,OAAO,GAAG6G,wBAAiB,CAACV,MAAM,CAAC,CAAA;EAAC,aAAA,CAAA,CAAA;EAAA,WAAA,CAAA,CAAA;EAAA,SAAA,MAAA;EAEpC,UAAA,MAAMW,EAAE,GAAYlH,OAAO,CAACgC,aAAa,EAAE,CAAA;YAC3C5B,OAAO,GAAG8G,EAAE,CAAC9G,OAAO,CAAA;YACpBmG,MAAM,GAAGW,EAAE,CAACzG,SAAS,CAAA;EACrB0F,UAAAA,OAAA,CAAK9F,MAAM,GAAGyB,mBAAY,CAACC,iBAAU,CAACmF,EAAE,CAAC/F,UAAU,CAAC,EAAE,IAAI,CAAC,CAAA;EAAA,SAAA;EAAA,OAAA,EAAA,CAAA;EAAA,MAAA,OAAAsB,OAAA,CAAAC,OAAA,CAAA8D,KAAA,IAAAA,KAAA,CAAAtD,IAAA,GAAAsD,KAAA,CAAAtD,IAAA,CAAAkD,MAAA,CAAAA,GAAAA,MAAA,CAAAI,KAAA,CAAA,CAAA,CAAA;EAS/D,KAAC,QAAA5D,CAAA,EAAA;EAAA,MAAA,OAAAH,OAAA,CAAAI,MAAA,CAAAD,CAAA,CAAA,CAAA;EAAA,KAAA;KAED;EACMuE,EAAAA,OAAOA,CAACC,OAAY,EAAEnD,SAAkB,EAAEgC,eAAuB,EAAA;MAAA,IAAA;QAAA,MAAAoB,OAAA,GAGnE,IAAI,CAAA;EADN,MAAA,IAAI,OAAOpB,eAAe,KAAK,QAAQ,EAAE;EACvCoB,QAAAA,OAAA,CAAKhH,MAAM,GAAGiH,qBAAc,CAACrB,eAAe,CAAC,CAAA;EAC9C,OAAA;EACD,MAAA,IAAI,OAAOoB,OAAA,CAAKhH,MAAM,KAAK,UAAU,EAAE;EACrC,QAAA,MAAM,IAAImC,KAAK,CAAC,sBAAsB,CAAC,CAAA;EACxC,OAAA;EACD,MAAA,MAAM+E,OAAO,GAAG;UACdlH,MAAM,EAAEgH,OAAA,CAAKhH,MAAM;EACnBC,QAAAA,GAAG,EAAE,OAAO;UACZkH,MAAM,EAAEH,OAAA,CAAKlH,GAAAA;SACd,CAAA;EACD;EACA,MAAA,IAAI8D,SAAS,EAAQsD,OAAQ,CAAC,WAAW,CAAC,GAAGtD,SAAS,CAAA;QACtD,OAAAxB,OAAA,CAAAC,OAAA,CAAO+E,gBAAS,CAACL,OAAO,EAAEG,OAAO,CAAC,CAAA,CAAA;EACpC,KAAC,QAAA3E,CAAA,EAAA;EAAA,MAAA,OAAAH,OAAA,CAAAI,MAAA,CAAAD,CAAA,CAAA,CAAA;EAAA,KAAA;EAAA,GAAA;EAEK8E,EAAAA,SAASA,CAACC,GAAW,EAAEC,QAAoB,EAAEC,QAAQ,EAAA;MAAA,IAAW;QAAA,MAAAC,OAAA,GAAR,IAAI,CAAA;QAAA,IAAfD,QAAQ,KAAAvG,SAAA,EAARuG,QAAQ,GAAGC,OAAA,CAAK3H,GAAG,CAAA;EACpE,MAAA,OAAAsC,OAAA,CAAAC,OAAA,CAAOgF,gBAAS,CAACC,GAAG,EAAE;UAAEC,QAAQ;EAAEC,QAAAA,QAAAA;EAAU,OAAA,CAAC,CAAA,CAAA;EAC/C,KAAC,QAAAjF,CAAA,EAAA;EAAA,MAAA,OAAAH,OAAA,CAAAI,MAAA,CAAAD,CAAA,CAAA,CAAA;EAAA,KAAA;EAAA,GAAA;EACF,CAAA;EAED,SAASuC,cAAcA,CAACJ,GAAW,EAAEC,KAA0B,EAAA;IAC7D,IAAIA,KAAK,YAAY+C,UAAU,IAAIC,aAAO,CAAChD,KAAK,CAAC,EAAE;MACjD,OAAOiD,aAAO,CAACjD,KAAK,CAAC,CAAA;EACtB,GAAA;EACD,EAAA,MAAMkD,oBAAoB,GAAGnD,GAAG,CAACoD,KAAK,CAAC,kDAAkD,CAAC,CAAA;EAC1F,EAAA,MAAMC,QAAQ,GAAGF,oBAAoB,GAAG,CAAC,CAAC,CAAA;EAC1C,EAAA,MAAMG,cAAc,GAAYrD,KAAM,CAACmD,KAAK,CAAC,kBAAkB,CAAC,CAAA;EAChE,EAAA,IAAIC,QAAQ,IAAI,CAACC,cAAc,EAAE;MAC/B,IAAID,QAAQ,KAAK,QAAQ,EAAE;QACzB,OAAOH,aAAO,CAACK,iBAAM,CAACC,MAAM,CAACvD,KAAK,CAAC,CAAC,CAAA;EACrC,KAAA;MACD,IAAIoD,QAAQ,KAAK,QAAQ,EAAE;QACzB,OAAOH,aAAO,CAACO,YAAM,CAACD,MAAM,CAACvD,KAAK,CAAC,CAAC,CAAA;EACrC,KAAA;KACF,MAAM,IAAIqD,cAAc,EAAE;EACzB,IAAA,OAAerD,KAAK,CAAA;EACrB,GAAA;EAED,EAAA,OAAOiD,aAAO,CAACQ,mBAAW,CAACzD,KAAK,CAAC,CAAC,CAAA;EACpC;;;;;;;;"}