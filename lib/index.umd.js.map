{"version":3,"file":"index.umd.js","sources":["../src/index.ts"],"sourcesContent":["import { createJWT, ES256KSigner, ES256Signer, hexToBytes, JWTVerified, Signer as JWTSigner, verifyJWT } from 'did-jwt'\nimport { Signer as TxSigner } from '@ethersproject/abstract-signer'\nimport { CallOverrides } from '@ethersproject/contracts'\nimport { computeAddress } from '@ethersproject/transactions'\nimport { computePublicKey } from '@ethersproject/signing-key'\nimport { Provider } from '@ethersproject/providers'\nimport { Wallet } from '@ethersproject/wallet'\nimport * as base64 from '@ethersproject/base64'\nimport { hexlify, hexValue, isBytes } from '@ethersproject/bytes'\nimport { Base58 } from '@ethersproject/basex'\nimport { toUtf8Bytes } from '@ethersproject/strings'\nimport { EthrDidController, interpretIdentifier, MetaSignature, REGISTRY } from 'ethr-did-resolver'\nimport { Resolvable } from 'did-resolver'\nimport { ec as EC } from 'elliptic';\n\nexport enum DelegateTypes {\n  veriKey = 'veriKey',\n  sigAuth = 'sigAuth',\n  enc = 'enc',\n}\n\ninterface IConfig {\n  identifier: string\n  chainNameOrId?: string | number\n\n  registry?: string\n\n  signer?: JWTSigner\n  alg?: 'ES256K' | 'ES256K-R'\n  txSigner?: TxSigner\n  privateKey?: string\n\n  rpcUrl?: string\n  provider?: Provider\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  web3?: any\n}\n\nexport type KeyPair = {\n  address: string\n  privateKey: string\n  publicKey: string\n  identifier: string\n}\n\ntype DelegateOptions = {\n  delegateType?: DelegateTypes\n  expiresIn?: number\n}\n\nexport class EthrDID {\n  public did: string\n  public address: string\n  public signer?: JWTSigner\n  public alg?: 'ES256K' | 'ES256K-R'\n  private owner?: string\n  private controller?: EthrDidController\n\n  constructor(conf: IConfig) {\n    const { address, publicKey, network } = interpretIdentifier(conf.identifier)\n    const chainNameOrId = typeof conf.chainNameOrId === 'number' ? hexValue(conf.chainNameOrId) : conf.chainNameOrId\n    if (conf.provider || conf.rpcUrl || conf.web3) {\n      let txSigner = conf.txSigner\n      if (conf.privateKey && typeof txSigner === 'undefined') {\n        txSigner = new Wallet(conf.privateKey)\n      }\n      this.controller = new EthrDidController(\n        conf.identifier,\n        undefined,\n        txSigner,\n        chainNameOrId,\n        conf.provider || conf.web3?.currentProvider,\n        conf.rpcUrl,\n        conf.registry || REGISTRY\n      )\n      this.did = this.controller.did\n    } else {\n      const net = network || chainNameOrId\n      let networkString = net ? `${net}:` : ''\n      if (networkString in ['mainnet:', '0x1:']) {\n        networkString = ''\n      }\n      this.did =\n        typeof publicKey === 'string' ? `did:ethr:${networkString}${publicKey}` : `did:ethr:${networkString}${address}`\n    }\n    this.address = address\n    if (conf.signer) {\n      this.signer = conf.signer\n      this.alg = conf.alg\n      if (!this.alg) {\n        console.warn(\n          'A JWT signer was specified but no algorithm was set. Please set the `alg` parameter when calling `new EthrDID()`'\n        )\n      }\n    } else if (conf.privateKey) {\n      this.signer = ES256KSigner(hexToBytes(conf.privateKey), true)\n      this.alg = 'ES256K-R'\n    }\n  }\n\n  static createKeyPair(chainNameOrId?: string | number): KeyPair {\n    const ec = new EC('p256'); // 'p256' is another name for secp256r1\n\n \n   const privateKey = '0x736f625c9dda78a94bb16840c82779bb7bc18014b8ede52f0f03429902fc4ba8';\n\n  // Load private key from hex\n    const key = ec.keyFromPrivate(privateKey, 'hex');\n    const publicKey = key.getPublic('hex');\n    const address = computeAddress(privateKey)\n    const net = typeof chainNameOrId === 'number' ? hexValue(chainNameOrId) : chainNameOrId\n    const identifier = net ? `did:ethr:${net}:${publicKey}` : publicKey\n    return { address, privateKey, publicKey, identifier }\n  }\n\n  async lookupOwner(cache = true): Promise<string> {\n    if (typeof this.controller === 'undefined') {\n      throw new Error('a web3 provider configuration is needed for network operations')\n    }\n    if (cache && this.owner) return this.owner\n    return this.controller?.getOwner(this.address)\n  }\n\n  async changeOwner(newOwner: string, txOptions?: CallOverrides): Promise<string> {\n    if (typeof this.controller === 'undefined') {\n      throw new Error('a web3 provider configuration is needed for network operations')\n    }\n    const owner = await this.lookupOwner()\n    const receipt = await this.controller.changeOwner(newOwner, {\n      ...txOptions,\n      from: owner,\n    })\n    this.owner = newOwner\n    return receipt.transactionHash\n  }\n\n  async createChangeOwnerHash(newOwner: string): Promise<string> {\n    if (typeof this.controller === 'undefined') {\n      throw new Error('a web3 provider configuration is needed for network operations')\n    }\n    return this.controller.createChangeOwnerHash(newOwner)\n  }\n\n  async changeOwnerSigned(newOwner: string, signature: MetaSignature, txOptions: CallOverrides): Promise<string> {\n    if (typeof this.controller === 'undefined') {\n      throw new Error('a web3 provider configuration is needed for network operations')\n    }\n    const receipt = await this.controller.changeOwnerSigned(newOwner, signature, txOptions)\n    this.owner = newOwner\n    return receipt.transactionHash\n  }\n\n  async addDelegate(\n    delegate: string,\n    delegateOptions?: DelegateOptions,\n    txOptions: CallOverrides = {}\n  ): Promise<string> {\n    if (typeof this.controller === 'undefined') {\n      throw new Error('a web3 provider configuration is needed for network operations')\n    }\n    const owner = await this.lookupOwner()\n    const receipt = await this.controller.addDelegate(\n      delegateOptions?.delegateType || DelegateTypes.veriKey,\n      delegate,\n      delegateOptions?.expiresIn || 86400,\n      { ...txOptions, from: owner }\n    )\n    return receipt.transactionHash\n  }\n\n  async createAddDelegateHash(delegateType: string, delegateAddress: string, exp: number): Promise<string> {\n    if (typeof this.controller === 'undefined') {\n      throw new Error('a web3 provider configuration is needed for network operations')\n    }\n    return this.controller.createAddDelegateHash(delegateType, delegateAddress, exp)\n  }\n\n  async addDelegateSigned(\n    delegate: string,\n    signature: MetaSignature,\n    delegateOptions?: DelegateOptions,\n    txOptions: CallOverrides = {}\n  ): Promise<string> {\n    if (typeof this.controller === 'undefined') {\n      throw new Error('a web3 provider configuration is needed for network operations')\n    }\n    const receipt = await this.controller.addDelegateSigned(\n      delegateOptions?.delegateType || DelegateTypes.veriKey,\n      delegate,\n      delegateOptions?.expiresIn || 86400,\n      signature,\n      txOptions\n    )\n    return receipt.transactionHash\n  }\n\n  async revokeDelegate(\n    delegate: string,\n    delegateType = DelegateTypes.veriKey,\n    txOptions: CallOverrides = {}\n  ): Promise<string> {\n    if (typeof this.controller === 'undefined') {\n      throw new Error('a web3 provider configuration is needed for network operations')\n    }\n    const owner = await this.lookupOwner()\n    const receipt = await this.controller.revokeDelegate(delegateType, delegate, { ...txOptions, from: owner })\n    return receipt.transactionHash\n  }\n\n  async createRevokeDelegateHash(delegateType: string, delegateAddress: string): Promise<string> {\n    if (typeof this.controller === 'undefined') {\n      throw new Error('a web3 provider configuration is needed for network operations')\n    }\n    return this.controller.createRevokeDelegateHash(delegateType, delegateAddress)\n  }\n\n  async revokeDelegateSigned(\n    delegate: string,\n    delegateType = DelegateTypes.veriKey,\n    signature: MetaSignature,\n    txOptions: CallOverrides = {}\n  ): Promise<string> {\n    if (typeof this.controller === 'undefined') {\n      throw new Error('a web3 provider configuration is needed for network operations')\n    }\n    const receipt = await this.controller.revokeDelegateSigned(delegateType, delegate, signature, txOptions)\n    return receipt.transactionHash\n  }\n\n  async setAttribute(\n    key: string,\n    value: string | Uint8Array,\n    expiresIn = 86400,\n    /** @deprecated please use `txOptions.gasLimit` */\n    gasLimit?: number,\n    txOptions: CallOverrides = {}\n  ): Promise<string> {\n    if (typeof this.controller === 'undefined') {\n      throw new Error('a web3 provider configuration is needed for network operations')\n    }\n    const owner = await this.lookupOwner()\n    const receipt = await this.controller.setAttribute(key, attributeToHex(key, value), expiresIn, {\n      gasLimit,\n      ...txOptions,\n      from: owner,\n    })\n    return receipt.transactionHash\n  }\n\n  async createSetAttributeHash(attrName: string, attrValue: string, exp: number) {\n    if (typeof this.controller === 'undefined') {\n      throw new Error('a web3 provider configuration is needed for network operations')\n    }\n    return this.controller.createSetAttributeHash(attrName, attrValue, exp)\n  }\n\n  async setAttributeSigned(\n    key: string,\n    value: string | Uint8Array,\n    expiresIn = 86400,\n    signature: MetaSignature,\n    txOptions: CallOverrides = {}\n  ): Promise<string> {\n    if (typeof this.controller === 'undefined') {\n      throw new Error('a web3 provider configuration is needed for network operations')\n    }\n    const receipt = await this.controller.setAttributeSigned(\n      key,\n      attributeToHex(key, value),\n      expiresIn,\n      signature,\n      txOptions\n    )\n    return receipt.transactionHash\n  }\n\n  async revokeAttribute(\n    key: string,\n    value: string | Uint8Array,\n    /** @deprecated please use `txOptions.gasLimit` */\n    gasLimit?: number,\n    txOptions: CallOverrides = {}\n  ): Promise<string> {\n    if (typeof this.controller === 'undefined') {\n      throw new Error('a web3 provider configuration is needed for network operations')\n    }\n    const owner = await this.lookupOwner()\n    const receipt = await this.controller.revokeAttribute(key, attributeToHex(key, value), {\n      gasLimit,\n      ...txOptions,\n      from: owner,\n    })\n    return receipt.transactionHash\n  }\n\n  async createRevokeAttributeHash(attrName: string, attrValue: string) {\n    if (typeof this.controller === 'undefined') {\n      throw new Error('a web3 provider configuration is needed for network operations')\n    }\n    return this.controller.createRevokeAttributeHash(attrName, attrValue)\n  }\n\n  async revokeAttributeSigned(\n    key: string,\n    value: string | Uint8Array,\n    signature: MetaSignature,\n    txOptions: CallOverrides = {}\n  ): Promise<string> {\n    if (typeof this.controller === 'undefined') {\n      throw new Error('a web3 provider configuration is needed for network operations')\n    }\n    const receipt = await this.controller.revokeAttributeSigned(key, attributeToHex(key, value), signature, txOptions)\n    return receipt.transactionHash\n  }\n\n  // Create a temporary signing delegate able to sign JWT on behalf of identity\n  async createSigningDelegate(\n    delegateType = DelegateTypes.veriKey,\n    expiresIn = 86400\n  ): Promise<{ kp: KeyPair; txHash: string }> {\n    const kp = EthrDID.createKeyPair()\n    this.signer = ES256Signer(hexToBytes(kp.privateKey))\n    const txHash = await this.addDelegate(kp.address, {\n      delegateType,\n      expiresIn,\n    })\n    return { kp, txHash }\n  }\n\n  // eslint-disable-next-line\n  async signJWT(payload: any, expiresIn?: number): Promise<string> {\n    if (typeof this.signer !== 'function') {\n      throw new Error('No signer configured')\n    }\n    const options = {\n      signer: this.signer,\n      alg: 'ES256',\n      issuer: this.did,\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    if (expiresIn) (<any>options)['expiresIn'] = expiresIn\n    return createJWT(payload, options)\n  }\n\n  async verifyJWT(jwt: string, resolver: Resolvable, audience = this.did): Promise<JWTVerified> {\n    return verifyJWT(jwt, { resolver, audience })\n  }\n}\n\nfunction attributeToHex(key: string, value: string | Uint8Array): string {\n  if (value instanceof Uint8Array || isBytes(value)) {\n    return hexlify(value)\n  }\n  const matchKeyWithEncoding = key.match(/^did\\/(pub|auth|svc)\\/(\\w+)(\\/(\\w+))?(\\/(\\w+))?$/)\n  const encoding = matchKeyWithEncoding?.[6]\n  const matchHexString = (<string>value).match(/^0x[0-9a-fA-F]*$/)\n  if (encoding && !matchHexString) {\n    if (encoding === 'base64') {\n      return hexlify(base64.decode(value))\n    }\n    if (encoding === 'base58') {\n      return hexlify(Base58.decode(value))\n    }\n  } else if (matchHexString) {\n    return <string>value\n  }\n\n  return hexlify(toUtf8Bytes(value))\n}\n"],"names":["DelegateTypes","EthrDID","constructor","conf","did","address","signer","alg","owner","controller","publicKey","network","interpretIdentifier","identifier","chainNameOrId","hexValue","provider","rpcUrl","web3","txSigner","privateKey","Wallet","EthrDidController","undefined","currentProvider","registry","REGISTRY","net","networkString","console","warn","ES256KSigner","hexToBytes","createKeyPair","ec","EC","key","keyFromPrivate","getPublic","computeAddress","lookupOwner","cache","Error","getOwner","changeOwner","newOwner","txOptions","from","receipt","transactionHash","createChangeOwnerHash","changeOwnerSigned","signature","addDelegate","delegate","delegateOptions","delegateType","veriKey","expiresIn","createAddDelegateHash","delegateAddress","exp","addDelegateSigned","revokeDelegate","createRevokeDelegateHash","revokeDelegateSigned","setAttribute","value","gasLimit","attributeToHex","createSetAttributeHash","attrName","attrValue","setAttributeSigned","revokeAttribute","createRevokeAttributeHash","revokeAttributeSigned","createSigningDelegate","kp","ES256Signer","txHash","signJWT","payload","options","issuer","createJWT","verifyJWT","jwt","resolver","audience","Uint8Array","isBytes","hexlify","matchKeyWithEncoding","match","encoding","matchHexString","base64","decode","Base58","toUtf8Bytes"],"mappings":"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"}